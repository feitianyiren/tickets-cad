<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
	<meta http-equiv="content-type" content="text/html; charset=iso-8859-1"/>
	<title>class Swift_Mime_SimpleMessage</title>
	<link type="text/css" rel="stylesheet" href="../../$resources/style.css"/>
	<script type="text/javascript" language="javascript" src="../../$resources/treeview.js"></script>
</head>
<body onload="toggler.setupTreeView('MainList');toggler.backToMemorizedState('MainList', 'btnToggle')">
	<ul class="navig">
	<li><a href="javascript:toggler.toggleAll('MainList', 'btnToggle')" class="expandAllBtn" id="btnToggle">Expand all</a></li><li><a href="../../help.htm" class="helpBtn">Help</a></li><li><a href="../../index-all.htm" class="indexAllBtn">Index</a></li><li><a href="class-Swift_Mime_SimpleHeaderSet.htm" class="left">Prev class</a></li><li><a href="package-summary.htm" class="top">Package</a></li><li><a href="class-Swift_Mime_SimpleMimeEntity.htm" class="right">Next class</a></li>
	</ul>
	<h1 class="class">Swift_Mime_SimpleMessage</h1>
	<div id="MainList">
	<div class="description"><p>Class <span class="title">Swift\Mime\Swift_Mime_SimpleMessage</span> extends <a href="../../Swift/Mime/class-Swift_Mime_MimePart.htm" class="link2">Swift\Mime\Swift_Mime_MimePart</a> implements <a href="../../Swift/Mime/interface-Swift_Mime_Message.htm" class="link2">Swift\Mime\Swift_Mime_Message</a></p><ul class="description"><li>The default email message class.</li><li class="smaller">@package Swift</li><li class="smaller">@subpackage Mime</li><li class="smaller">@author Chris Corbyn</li><li>All implemented interfaces: <a href="../../Swift/Mime/interface-Swift_Mime_MimeEntity.htm" class="link2">Swift\Mime\Swift_Mime_MimeEntity</a>, <a href="../../Swift/Mime/interface-Swift_Mime_Message.htm" class="link2">Swift\Mime\Swift_Mime_Message</a></li><li>All subclasses: <a href="../../Swift/Mime/class-Swift_Message.htm" class="link2">Swift\Mime\Swift_Message</a></li><li>File: lib/classes/Swift/Mime/SimpleMessage.php</li></ul></div><dl class="inheritTree"><dd style="padding-left:-15px"><a href="../../Swift/Mime/class-Swift_Mime_SimpleMimeEntity.htm" class="link2">Swift\Mime\Swift_Mime_SimpleMimeEntity</a></dd><dd style="padding-left:76px"><img src="../../$resources/inherit.gif" alt="extended by "/><a href="../../Swift/Mime/class-Swift_Mime_MimePart.htm" class="link2">Swift\Mime\Swift_Mime_MimePart</a></dd><dd style="padding-left:151px" class="current"><img src="../../$resources/inherit.gif" alt="extended by "/>Swift\Mime\Swift_Mime_SimpleMessage</dd></dl><h2>Functions</h2><ul class="summary"><li class="Collapsed" id="f525ccca5a8ed8"><a href="javascript:void(0);" class="method-pub" target="main">__construct</a>(<a href="../../Swift/Mime/interface-Swift_Mime_HeaderSet.htm" class="link">Swift\Mime\Swift_Mime_HeaderSet</a> $headers, <a href="../../Swift/Mime/interface-Swift_Mime_ContentEncoder.htm" class="link">Swift\Mime\Swift_Mime_ContentEncoder</a> $encoder, <span class="link">Swift_KeyCache</span> $cache, <a href="../../datatype-string.htm" class="link">string</a> $charset<span class="defVal"> = null</span>)<ul class="description"><li>Public <a href="../../datatype-void.htm" class="link">void</a> <span class="smallTitle">__construct</span>(<a href="../../Swift/Mime/interface-Swift_Mime_HeaderSet.htm" class="link">Swift\Mime\Swift_Mime_HeaderSet</a> $headers, <a href="../../Swift/Mime/interface-Swift_Mime_ContentEncoder.htm" class="link">Swift\Mime\Swift_Mime_ContentEncoder</a> $encoder, <span class="link">Swift_KeyCache</span> $cache, <a href="../../datatype-string.htm" class="link">string</a> $charset<span class="defVal"> = null</span>)</li><li>Create a new SimpleMessage with $headers, $encoder and $cache.</li><li class="smaller">@param Swift_Mime_HeaderSet $headers</li><li class="smaller">@param Swift_Mime_ContentEncoder $encoder</li><li class="smaller">@param Swift_KeyCache $cache</li><li class="smaller">@param string $charset</li><li>Create a new SimpleMimeEntity with $headers, $encoder and $cache.<br/><span class="note">(copied from class <a href="../../Swift/Mime/class-Swift_Mime_SimpleMimeEntity.htm" class="link">Swift\Mime\Swift_Mime_SimpleMimeEntity</a>)</span></li><li>Create a new MimePart with $headers, $encoder and $cache.<br/><span class="note">(copied from class <a href="../../Swift/Mime/class-Swift_Mime_MimePart.htm" class="link">Swift\Mime\Swift_Mime_MimePart</a>)</span></li></ul></li><li class="Collapsed" id="f525ccca5a9496"><a href="javascript:void(0);" class="method-pub" target="main">getNestingLevel</a>()<ul class="description"><li>Public <a href="../../datatype-int.htm" class="link">int</a> <span class="smallTitle">getNestingLevel</span>()</li><li>Always returns {@link LEVEL_TOP} for a message instance.</li><li>Get the level at which this entity shall be nested in final document.<br />
The lower the value, the more outermost the entity will be nested.<br/><span class="note">(copied from interface <a href="../../Swift/Mime/interface-Swift_Mime_MimeEntity.htm" class="link">Swift\Mime\Swift_Mime_MimeEntity</a>)</span></li><li>Get the nesting level of this entity.<br/><span class="note">(copied from class <a href="../../Swift/Mime/class-Swift_Mime_SimpleMimeEntity.htm" class="link">Swift\Mime\Swift_Mime_SimpleMimeEntity</a>)</span></li><li>Get the nesting level of this entity.<br/><span class="note">(copied from class <a href="../../Swift/Mime/class-Swift_Mime_MimePart.htm" class="link">Swift\Mime\Swift_Mime_MimePart</a>)</span></li></ul></li><li class="Collapsed" id="f525ccca5a967f"><a href="javascript:void(0);" class="method-pub" target="main">setSubject</a>(<a href="../../datatype-string.htm" class="link">string</a> $subject)<ul class="description"><li>Public <a href="../../datatype-void.htm" class="link">void</a> <span class="smallTitle">setSubject</span>(<a href="../../datatype-string.htm" class="link">string</a> $subject)</li><li>Set the subject of this message.</li><li class="smaller">@param string $subject</li><li>Set the subject of the message.<br/><span class="note">(copied from interface <a href="../../Swift/Mime/interface-Swift_Mime_Message.htm" class="link">Swift\Mime\Swift_Mime_Message</a>)</span></li></ul></li><li class="Collapsed" id="f525ccca5a98fd"><a href="javascript:void(0);" class="method-pub" target="main">getSubject</a>()<ul class="description"><li>Public <a href="../../datatype-string.htm" class="link">string</a> <span class="smallTitle">getSubject</span>()</li><li>Get the subject of this message.</li><li>Get the subject of the message.<br/><span class="note">(copied from interface <a href="../../Swift/Mime/interface-Swift_Mime_Message.htm" class="link">Swift\Mime\Swift_Mime_Message</a>)</span></li></ul></li><li class="Collapsed" id="f525ccca5a9ad5"><a href="javascript:void(0);" class="method-pub" target="main">setDate</a>(<a href="../../datatype-int.htm" class="link">int</a> $date)<ul class="description"><li>Public <a href="../../datatype-void.htm" class="link">void</a> <span class="smallTitle">setDate</span>(<a href="../../datatype-int.htm" class="link">int</a> $date)</li><li>Set the date at which this message was created.</li><li class="smaller">@param int $date</li><li>Set the origination date of the message as a UNIX timestamp.<br/><span class="note">(copied from interface <a href="../../Swift/Mime/interface-Swift_Mime_Message.htm" class="link">Swift\Mime\Swift_Mime_Message</a>)</span></li></ul></li><li class="Collapsed" id="f525ccca5a9d53"><a href="javascript:void(0);" class="method-pub" target="main">getDate</a>()<ul class="description"><li>Public <a href="../../datatype-int.htm" class="link">int</a> <span class="smallTitle">getDate</span>()</li><li>Get the date at which this message was created.</li><li>Get the origination date of the message as a UNIX timestamp.<br/><span class="note">(copied from interface <a href="../../Swift/Mime/interface-Swift_Mime_Message.htm" class="link">Swift\Mime\Swift_Mime_Message</a>)</span></li></ul></li><li class="Collapsed" id="f525ccca5a9f36"><a href="javascript:void(0);" class="method-pub" target="main">setReturnPath</a>(<a href="../../datatype-string.htm" class="link">string</a> $address)<ul class="description"><li>Public <a href="../../datatype-void.htm" class="link">void</a> <span class="smallTitle">setReturnPath</span>(<a href="../../datatype-string.htm" class="link">string</a> $address)</li><li>Set the return-path (the bounce address) of this message.</li><li class="smaller">@param string $address</li><li>Set the return-path (bounce-detect) address.<br/><span class="note">(copied from interface <a href="../../Swift/Mime/interface-Swift_Mime_Message.htm" class="link">Swift\Mime\Swift_Mime_Message</a>)</span></li></ul></li><li class="Collapsed" id="f525ccca5aa1b7"><a href="javascript:void(0);" class="method-pub" target="main">getReturnPath</a>()<ul class="description"><li>Public <a href="../../datatype-string.htm" class="link">string</a> <span class="smallTitle">getReturnPath</span>()</li><li>Get the return-path (bounce address) of this message.</li><li>Get the return-path (bounce-detect) address.<br/><span class="note">(copied from interface <a href="../../Swift/Mime/interface-Swift_Mime_Message.htm" class="link">Swift\Mime\Swift_Mime_Message</a>)</span></li></ul></li><li class="Collapsed" id="f525ccca5aa396"><a href="javascript:void(0);" class="method-pub" target="main">setSender</a>(<a href="../../datatype-mixed.htm" class="link">mixed</a> $address, <a href="../../datatype-string.htm" class="link">string</a> $name<span class="defVal"> = null</span>)<ul class="description"><li>Public <a href="../../datatype-void.htm" class="link">void</a> <span class="smallTitle">setSender</span>(<a href="../../datatype-mixed.htm" class="link">mixed</a> $address, <a href="../../datatype-string.htm" class="link">string</a> $name<span class="defVal"> = null</span>)</li><li>Set the sender of this message.<br />
This does not override the From field, but it has a higher significance.</li><li class="smaller">@param string $sender</li><li class="smaller">@param string $name optional</li><li>Set the sender of this message.<br />
<br />
If multiple addresses are present in the From field, this SHOULD be set.<br />
<br />
According to RFC 2822 it is a requirement when there are multiple From addresses, but Swift itself does not require it directly.<br />
<br />
An associative array (with one element!) can be used to provide a display- name: i.e. array('email@address' =&gt; 'Real Name').<br />
<br />
If the second parameter is provided and the first is a string, then $name is associated with the address.<br/><span class="note">(copied from interface <a href="../../Swift/Mime/interface-Swift_Mime_Message.htm" class="link">Swift\Mime\Swift_Mime_Message</a>)</span></li></ul></li><li class="Collapsed" id="f525ccca5aa70d"><a href="javascript:void(0);" class="method-pub" target="main">getSender</a>()<ul class="description"><li>Public <a href="../../datatype-string.htm" class="link">string</a> <span class="smallTitle">getSender</span>()</li><li>Get the sender of this message.</li><li>Get the sender address for this message.<br />
<br />
This has a higher significance than the From address.<br/><span class="note">(copied from interface <a href="../../Swift/Mime/interface-Swift_Mime_Message.htm" class="link">Swift\Mime\Swift_Mime_Message</a>)</span></li></ul></li><li class="Collapsed" id="f525ccca5aa8f4"><a href="javascript:void(0);" class="method-pub" target="main">addFrom</a>(<a href="../../datatype-string.htm" class="link">string</a> $address, <a href="../../datatype-string.htm" class="link">string</a> $name<span class="defVal"> = null</span>)<ul class="description"><li>Public <a href="../../datatype-void.htm" class="link">void</a> <span class="smallTitle">addFrom</span>(<a href="../../datatype-string.htm" class="link">string</a> $address, <a href="../../datatype-string.htm" class="link">string</a> $name<span class="defVal"> = null</span>)</li><li>Add a From: address to this message.<br />
<br />
If $name is passed this name will be associated with the address.</li><li class="smaller">@param string $address</li><li class="smaller">@param string $name optional</li></ul></li><li class="Collapsed" id="f525ccca5aac41"><a href="javascript:void(0);" class="method-pub" target="main">setFrom</a>(<a href="../../datatype-string.htm" class="link">string</a> $addresses, <a href="../../datatype-string.htm" class="link">string</a> $name<span class="defVal"> = null</span>)<ul class="description"><li>Public <a href="../../datatype-void.htm" class="link">void</a> <span class="smallTitle">setFrom</span>(<a href="../../datatype-string.htm" class="link">string</a> $addresses, <a href="../../datatype-string.htm" class="link">string</a> $name<span class="defVal"> = null</span>)</li><li>Set the from address of this message.<br />
<br />
You may pass an array of addresses if this message is from multiple people.<br />
<br />
If $name is passed and the first parameter is a string, this name will be associated with the address.</li><li class="smaller">@param string $addresses</li><li class="smaller">@param string $name optional</li><li>Set the From address of this message.<br />
<br />
It is permissible for multiple From addresses to be set using an array.<br />
<br />
If multiple From addresses are used, you SHOULD set the Sender address and according to RFC 2822, MUST set the sender address.<br />
<br />
An array can be used if display names are to be provided: i.e.<br />
array('email@address.com' =&gt; 'Real Name').<br />
<br />
If the second parameter is provided and the first is a string, then $name is associated with the address.<br/><span class="note">(copied from interface <a href="../../Swift/Mime/interface-Swift_Mime_Message.htm" class="link">Swift\Mime\Swift_Mime_Message</a>)</span></li></ul></li><li class="Collapsed" id="f525ccca5aaff4"><a href="javascript:void(0);" class="method-pub" target="main">getFrom</a>()<ul class="description"><li>Public <a href="../../datatype-string.htm" class="link">string</a> <span class="smallTitle">getFrom</span>()</li><li>Get the from address of this message.</li><li>Get the From address(es) of this message.<br />
<br />
This method always returns an associative array where the keys are the addresses.<br/><span class="note">(copied from interface <a href="../../Swift/Mime/interface-Swift_Mime_Message.htm" class="link">Swift\Mime\Swift_Mime_Message</a>)</span></li></ul></li><li class="Collapsed" id="f525ccca5ab1e2"><a href="javascript:void(0);" class="method-pub" target="main">addReplyTo</a>(<a href="../../datatype-string.htm" class="link">string</a> $address, <a href="../../datatype-string.htm" class="link">string</a> $name<span class="defVal"> = null</span>)<ul class="description"><li>Public <a href="../../datatype-void.htm" class="link">void</a> <span class="smallTitle">addReplyTo</span>(<a href="../../datatype-string.htm" class="link">string</a> $address, <a href="../../datatype-string.htm" class="link">string</a> $name<span class="defVal"> = null</span>)</li><li>Add a Reply-To: address to this message.<br />
<br />
If $name is passed this name will be associated with the address.</li><li class="smaller">@param string $address</li><li class="smaller">@param string $name optional</li></ul></li><li class="Collapsed" id="f525ccca5ab528"><a href="javascript:void(0);" class="method-pub" target="main">setReplyTo</a>(<a href="../../datatype-string.htm" class="link">string</a> $addresses, <a href="../../datatype-string.htm" class="link">string</a> $name<span class="defVal"> = null</span>)<ul class="description"><li>Public <a href="../../datatype-void.htm" class="link">void</a> <span class="smallTitle">setReplyTo</span>(<a href="../../datatype-string.htm" class="link">string</a> $addresses, <a href="../../datatype-string.htm" class="link">string</a> $name<span class="defVal"> = null</span>)</li><li>Set the reply-to address of this message.<br />
<br />
You may pass an array of addresses if replies will go to multiple people.<br />
<br />
If $name is passed and the first parameter is a string, this name will be associated with the address.</li><li class="smaller">@param string $addresses</li><li class="smaller">@param string $name optional</li><li>Set the Reply-To address(es).<br />
<br />
Any replies from the receiver will be sent to this address.<br />
<br />
It is permissible for multiple reply-to addresses to be set using an array.<br />
<br />
This method has the same synopsis as {@link setFrom()} and {@link setTo()}.<br />
<br />
If the second parameter is provided and the first is a string, then $name is associated with the address.<br/><span class="note">(copied from interface <a href="../../Swift/Mime/interface-Swift_Mime_Message.htm" class="link">Swift\Mime\Swift_Mime_Message</a>)</span></li></ul></li><li class="Collapsed" id="f525ccca5ab8db"><a href="javascript:void(0);" class="method-pub" target="main">getReplyTo</a>()<ul class="description"><li>Public <a href="../../datatype-string.htm" class="link">string</a> <span class="smallTitle">getReplyTo</span>()</li><li>Get the reply-to address of this message.</li><li>Get the Reply-To addresses for this message.<br />
<br />
This method always returns an associative array where the keys provide the email addresses.<br/><span class="note">(copied from interface <a href="../../Swift/Mime/interface-Swift_Mime_Message.htm" class="link">Swift\Mime\Swift_Mime_Message</a>)</span></li></ul></li><li class="Collapsed" id="f525ccca5abacb"><a href="javascript:void(0);" class="method-pub" target="main">addTo</a>(<a href="../../datatype-string.htm" class="link">string</a> $address, <a href="../../datatype-string.htm" class="link">string</a> $name<span class="defVal"> = null</span>)<ul class="description"><li>Public <a href="../../datatype-void.htm" class="link">void</a> <span class="smallTitle">addTo</span>(<a href="../../datatype-string.htm" class="link">string</a> $address, <a href="../../datatype-string.htm" class="link">string</a> $name<span class="defVal"> = null</span>)</li><li>Add a To: address to this message.<br />
<br />
If $name is passed this name will be associated with the address.</li><li class="smaller">@param string $address</li><li class="smaller">@param string $name optional</li></ul></li><li class="Collapsed" id="f525ccca5abdf7"><a href="javascript:void(0);" class="method-pub" target="main">setTo</a>(<a href="../../datatype-array.htm" class="link">array</a> $addresses, <a href="../../datatype-string.htm" class="link">string</a> $name<span class="defVal"> = null</span>)<ul class="description"><li>Public <a href="../../datatype-void.htm" class="link">void</a> <span class="smallTitle">setTo</span>(<a href="../../datatype-array.htm" class="link">array</a> $addresses, <a href="../../datatype-string.htm" class="link">string</a> $name<span class="defVal"> = null</span>)</li><li>Set the to addresses of this message.<br />
<br />
If multiple recipients will receive the message and array should be used.<br />
<br />
If $name is passed and the first parameter is a string, this name will be associated with the address.</li><li class="smaller">@param array $addresses</li><li class="smaller">@param string $name optional</li><li>Set the To address(es).<br />
<br />
Recipients set in this field will receive a copy of this message.<br />
<br />
This method has the same synopsis as {@link setFrom()} and {@link setCc()}.<br />
<br />
If the second parameter is provided and the first is a string, then $name is associated with the address.<br/><span class="note">(copied from interface <a href="../../Swift/Mime/interface-Swift_Mime_Message.htm" class="link">Swift\Mime\Swift_Mime_Message</a>)</span></li></ul></li><li class="Collapsed" id="f525ccca5ac186"><a href="javascript:void(0);" class="method-pub" target="main">getTo</a>()<ul class="description"><li>Public <a href="../../datatype-array.htm" class="link">array</a> <span class="smallTitle">getTo</span>()</li><li>Get the To addresses of this message.</li><li>Get the To addresses for this message.<br />
<br />
This method always returns an associative array, whereby the keys provide the actual email addresses.<br/><span class="note">(copied from interface <a href="../../Swift/Mime/interface-Swift_Mime_Message.htm" class="link">Swift\Mime\Swift_Mime_Message</a>)</span></li></ul></li><li class="Collapsed" id="f525ccca5ac36d"><a href="javascript:void(0);" class="method-pub" target="main">addCc</a>(<a href="../../datatype-string.htm" class="link">string</a> $address, <a href="../../datatype-string.htm" class="link">string</a> $name<span class="defVal"> = null</span>)<ul class="description"><li>Public <a href="../../datatype-void.htm" class="link">void</a> <span class="smallTitle">addCc</span>(<a href="../../datatype-string.htm" class="link">string</a> $address, <a href="../../datatype-string.htm" class="link">string</a> $name<span class="defVal"> = null</span>)</li><li>Add a Cc: address to this message.<br />
<br />
If $name is passed this name will be associated with the address.</li><li class="smaller">@param string $address</li><li class="smaller">@param string $name optional</li></ul></li><li class="Collapsed" id="f525ccca5ac6b7"><a href="javascript:void(0);" class="method-pub" target="main">setCc</a>(<a href="../../datatype-array.htm" class="link">array</a> $addresses, <a href="../../datatype-string.htm" class="link">string</a> $name<span class="defVal"> = null</span>)<ul class="description"><li>Public <a href="../../datatype-void.htm" class="link">void</a> <span class="smallTitle">setCc</span>(<a href="../../datatype-array.htm" class="link">array</a> $addresses, <a href="../../datatype-string.htm" class="link">string</a> $name<span class="defVal"> = null</span>)</li><li>Set the Cc addresses of this message.<br />
<br />
If $name is passed and the first parameter is a string, this name will be associated with the address.</li><li class="smaller">@param array $addresses</li><li class="smaller">@param string $name optional</li><li>Set the Cc address(es).<br />
<br />
Recipients set in this field will receive a 'carbon-copy' of this message.<br />
<br />
This method has the same synopsis as {@link setFrom()} and {@link setTo()}.<br/><span class="note">(copied from interface <a href="../../Swift/Mime/interface-Swift_Mime_Message.htm" class="link">Swift\Mime\Swift_Mime_Message</a>)</span></li></ul></li><li class="Collapsed" id="f525ccca5aca69"><a href="javascript:void(0);" class="method-pub" target="main">getCc</a>()<ul class="description"><li>Public <a href="../../datatype-array.htm" class="link">array</a> <span class="smallTitle">getCc</span>()</li><li>Get the Cc address of this message.</li><li>Get the Cc addresses for this message.<br />
<br />
This method always returns an associative array, whereby the keys provide the actual email addresses.<br/><span class="note">(copied from interface <a href="../../Swift/Mime/interface-Swift_Mime_Message.htm" class="link">Swift\Mime\Swift_Mime_Message</a>)</span></li></ul></li><li class="Collapsed" id="f525ccca5acc56"><a href="javascript:void(0);" class="method-pub" target="main">addBcc</a>(<a href="../../datatype-string.htm" class="link">string</a> $address, <a href="../../datatype-string.htm" class="link">string</a> $name<span class="defVal"> = null</span>)<ul class="description"><li>Public <a href="../../datatype-void.htm" class="link">void</a> <span class="smallTitle">addBcc</span>(<a href="../../datatype-string.htm" class="link">string</a> $address, <a href="../../datatype-string.htm" class="link">string</a> $name<span class="defVal"> = null</span>)</li><li>Add a Bcc: address to this message.<br />
<br />
If $name is passed this name will be associated with the address.</li><li class="smaller">@param string $address</li><li class="smaller">@param string $name optional</li></ul></li><li class="Collapsed" id="f525ccca5acfab"><a href="javascript:void(0);" class="method-pub" target="main">setBcc</a>(<a href="../../datatype-array.htm" class="link">array</a> $addresses, <a href="../../datatype-string.htm" class="link">string</a> $name<span class="defVal"> = null</span>)<ul class="description"><li>Public <a href="../../datatype-void.htm" class="link">void</a> <span class="smallTitle">setBcc</span>(<a href="../../datatype-array.htm" class="link">array</a> $addresses, <a href="../../datatype-string.htm" class="link">string</a> $name<span class="defVal"> = null</span>)</li><li>Set the Bcc addresses of this message.<br />
<br />
If $name is passed and the first parameter is a string, this name will be associated with the address.</li><li class="smaller">@param array $addresses</li><li class="smaller">@param string $name optional</li><li>Set the Bcc address(es).<br />
<br />
Recipients set in this field will receive a 'blind-carbon-copy' of this message.<br />
<br />
In other words, they will get the message, but any other recipients of the message will have no such knowledge of their receipt of it.<br />
<br />
This method has the same synopsis as {@link setFrom()} and {@link setTo()}.<br/><span class="note">(copied from interface <a href="../../Swift/Mime/interface-Swift_Mime_Message.htm" class="link">Swift\Mime\Swift_Mime_Message</a>)</span></li></ul></li><li class="Collapsed" id="f525ccca5ad35d"><a href="javascript:void(0);" class="method-pub" target="main">getBcc</a>()<ul class="description"><li>Public <a href="../../datatype-array.htm" class="link">array</a> <span class="smallTitle">getBcc</span>()</li><li>Get the Bcc addresses of this message.</li><li>Get the Bcc addresses for this message.<br />
<br />
This method always returns an associative array, whereby the keys provide the actual email addresses.<br/><span class="note">(copied from interface <a href="../../Swift/Mime/interface-Swift_Mime_Message.htm" class="link">Swift\Mime\Swift_Mime_Message</a>)</span></li></ul></li><li class="Collapsed" id="f525ccca5ad54c"><a href="javascript:void(0);" class="method-pub" target="main">setPriority</a>(<a href="../../datatype-int.htm" class="link">int</a> $priority)<ul class="description"><li>Public <a href="../../datatype-void.htm" class="link">void</a> <span class="smallTitle">setPriority</span>(<a href="../../datatype-int.htm" class="link">int</a> $priority)</li><li>Set the priority of this message.<br />
The value is an integer where 1 is the highest priority and 5 is the lowest.</li><li class="smaller">@param int $priority</li></ul></li><li class="Collapsed" id="f525ccca5ad8c0"><a href="javascript:void(0);" class="method-pub" target="main">getPriority</a>()<ul class="description"><li>Public <a href="../../datatype-int.htm" class="link">int</a> <span class="smallTitle">getPriority</span>()</li><li>Get the priority of this message.<br />
The returned value is an integer where 1 is the highest priority and 5 is the lowest.</li></ul></li><li class="Collapsed" id="f525ccca5adae8"><a href="javascript:void(0);" class="method-pub" target="main">setReadReceiptTo</a>(<a href="../../datatype-array.htm" class="link">array</a> $addresses)<ul class="description"><li>Public <a href="../../datatype-void.htm" class="link">void</a> <span class="smallTitle">setReadReceiptTo</span>(<a href="../../datatype-array.htm" class="link">array</a> $addresses)</li><li>Ask for a delivery receipt from the recipient to be sent to $addresses</li><li class="smaller">@param array $addresses</li></ul></li><li class="Collapsed" id="f525ccca5add44"><a href="javascript:void(0);" class="method-pub" target="main">getReadReceiptTo</a>()<ul class="description"><li>Public <a href="../../datatype-string.htm" class="link">string</a> <span class="smallTitle">getReadReceiptTo</span>()</li><li>Get the addresses to which a read-receipt will be sent.</li></ul></li><li class="Collapsed" id="f525ccca5adf31"><a href="javascript:void(0);" class="method-pub" target="main">attach</a>(<a href="../../Swift/Mime/interface-Swift_Mime_MimeEntity.htm" class="link">Swift\Mime\Swift_Mime_MimeEntity</a> $entity)<ul class="description"><li>Public <a href="../../datatype-void.htm" class="link">void</a> <span class="smallTitle">attach</span>(<a href="../../Swift/Mime/interface-Swift_Mime_MimeEntity.htm" class="link">Swift\Mime\Swift_Mime_MimeEntity</a> $entity)</li><li>Attach a {@link Swift_Mime_MimeEntity} such as an Attachment or MimePart.</li><li class="smaller">@param Swift_Mime_MimeEntity $entity</li></ul></li><li class="Collapsed" id="f525ccca5ae1b4"><a href="javascript:void(0);" class="method-pub" target="main">detach</a>(<a href="../../Swift/Mime/interface-Swift_Mime_MimeEntity.htm" class="link">Swift\Mime\Swift_Mime_MimeEntity</a> $entity)<ul class="description"><li>Public <a href="../../datatype-void.htm" class="link">void</a> <span class="smallTitle">detach</span>(<a href="../../Swift/Mime/interface-Swift_Mime_MimeEntity.htm" class="link">Swift\Mime\Swift_Mime_MimeEntity</a> $entity)</li><li>Remove an already attached entity.</li><li class="smaller">@param Swift_Mime_MimeEntity $entity</li></ul></li><li class="Collapsed" id="f525ccca5ae465"><a href="javascript:void(0);" class="method-pub" target="main">embed</a>(<a href="../../Swift/Mime/interface-Swift_Mime_MimeEntity.htm" class="link">Swift\Mime\Swift_Mime_MimeEntity</a> $entity)<ul class="description"><li>Public <a href="../../datatype-string.htm" class="link">string</a> <span class="smallTitle">embed</span>(<a href="../../Swift/Mime/interface-Swift_Mime_MimeEntity.htm" class="link">Swift\Mime\Swift_Mime_MimeEntity</a> $entity)</li><li>Attach a {@link Swift_Mime_MimeEntity} and return it's CID source.<br />
This method should be used when embedding images or other data in a message.</li><li class="smaller">@param Swift_Mime_MimeEntity $entity</li></ul></li><li class="Collapsed" id="f525ccca5ae72d"><a href="javascript:void(0);" class="method-pub" target="main">toString</a>()<ul class="description"><li>Public <a href="../../datatype-string.htm" class="link">string</a> <span class="smallTitle">toString</span>()</li><li>Get this message as a complete string.</li><li>Get this entire entity in its string form.<br/><span class="note">(copied from interface <a href="../../Swift/Mime/interface-Swift_Mime_MimeEntity.htm" class="link">Swift\Mime\Swift_Mime_MimeEntity</a>)</span></li><li>Get this entire entity as a string.<br/><span class="note">(copied from class <a href="../../Swift/Mime/class-Swift_Mime_SimpleMimeEntity.htm" class="link">Swift\Mime\Swift_Mime_SimpleMimeEntity</a>)</span></li></ul></li><li class="Collapsed" id="f525ccca5ae9c8"><a href="javascript:void(0);" class="method-pub" target="main">toByteStream</a>(<span class="link">Swift_InputByteStream</span> $is)<ul class="description"><li>Public <a href="../../datatype-void.htm" class="link">void</a> <span class="smallTitle">toByteStream</span>(<span class="link">Swift_InputByteStream</span> $is)</li><li>Write this message to a {@link Swift_InputByteStream}.</li><li class="smaller">@param Swift_InputByteStream $is</li><li>Get this entire entity as a ByteStream.<br/><span class="note">(copied from interface <a href="../../Swift/Mime/interface-Swift_Mime_MimeEntity.htm" class="link">Swift\Mime\Swift_Mime_MimeEntity</a>)</span></li><li>Write this entire entity to a {@link Swift_InputByteStream}.<br/><span class="note">(copied from class <a href="../../Swift/Mime/class-Swift_Mime_SimpleMimeEntity.htm" class="link">Swift\Mime\Swift_Mime_SimpleMimeEntity</a>)</span></li></ul></li><li class="Collapsed" id="f525ccca5aecac"><a href="javascript:void(0);" class="method-pro" target="main">_getIdField</a>()<ul class="description"><li>Protected <a href="../../datatype-void.htm" class="link">void</a> <span class="smallTitle">_getIdField</span>()</li><li class="smaller">@see Swift_Mime_SimpleMimeEntity::_getIdField()</li><li>Get the name of the header that provides the ID of this entity<br/><span class="note">(copied from class <a href="../../Swift/Mime/class-Swift_Mime_SimpleMimeEntity.htm" class="link">Swift\Mime\Swift_Mime_SimpleMimeEntity</a>)</span></li></ul></li><li class="Collapsed" id="f525ccca5aee19"><a href="javascript:void(0);" class="method-pri" target="main">_becomeMimePart</a>()<ul class="description"><li>Private <a href="../../datatype-void.htm" class="link">void</a> <span class="smallTitle">_becomeMimePart</span>()</li><li>Turn the body of this message into a child of itself if needed</li></ul></li><li class="Collapsed" id="f525ccca5af021"><a href="javascript:void(0);" class="method-pri" target="main">_getTopNestingLevel</a>()<ul class="description"><li>Private <a href="../../datatype-void.htm" class="link">void</a> <span class="smallTitle">_getTopNestingLevel</span>()</li><li>Get the highest nesting level nested inside this message</li></ul></li></ul>
	</div>
	<div id="footer">Documentation generated on Oct 15, 2013, 0:03:44 -0500 by <a href="http://pear.php.net/package/PHP_UML/" target="_new">PHP_UML</a></div>
</body>
</html>