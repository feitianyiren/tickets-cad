<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
	<meta http-equiv="content-type" content="text/html; charset=iso-8859-1"/>
	<title>class Swift_DependencyContainer</title>
	<link type="text/css" rel="stylesheet" href="../$resources/style.css"/>
	<script type="text/javascript" language="javascript" src="../$resources/treeview.js"></script>
</head>
<body onload="toggler.setupTreeView('MainList');toggler.backToMemorizedState('MainList', 'btnToggle')">
	<ul class="navig">
	<li><a href="javascript:toggler.toggleAll('MainList', 'btnToggle')" class="expandAllBtn" id="btnToggle">Expand all</a></li><li><a href="../help.htm" class="helpBtn">Help</a></li><li><a href="../index-all.htm" class="indexAllBtn">Index</a></li><li><a href="package-summary.htm" class="top">Package</a></li><li><a href="class-Swift_DependencyException.htm" class="right">Next class</a></li>
	</ul>
	<h1 class="class">Swift_DependencyContainer</h1>
	<div id="MainList">
	<div class="description"><p>Class <span class="title">Swift\Swift_DependencyContainer</span></p><ul class="description"><li>Dependency Injection container.</li><li class="smaller">@package Swift</li><li class="smaller">@author Chris Corbyn</li><li>File: lib/classes/Swift/DependencyContainer.php</li></ul></div><h2>Properties</h2><ul class="summary"><li class="Collapsed" id="TYPE_VALUE"><a href="javascript:void(0);" class="property-pub" target="main">TYPE_VALUE</a><ul class="description"><li>Public static const <a href="../datatype-int.htm" class="link">int</a> <span class="smallTitle">TYPE_VALUE</span><span class="defVal"> = 0x0001</span></li><li>Constant for literal value types</li></ul></li><li class="Collapsed" id="TYPE_INSTANCE"><a href="javascript:void(0);" class="property-pub" target="main">TYPE_INSTANCE</a><ul class="description"><li>Public static const <a href="../datatype-int.htm" class="link">int</a> <span class="smallTitle">TYPE_INSTANCE</span><span class="defVal"> = 0x0010</span></li><li>Constant for new instance types</li></ul></li><li class="Collapsed" id="TYPE_SHARED"><a href="javascript:void(0);" class="property-pub" target="main">TYPE_SHARED</a><ul class="description"><li>Public static const <a href="../datatype-int.htm" class="link">int</a> <span class="smallTitle">TYPE_SHARED</span><span class="defVal"> = 0x0100</span></li><li>Constant for shared instance types</li></ul></li><li class="Collapsed" id="TYPE_ALIAS"><a href="javascript:void(0);" class="property-pub" target="main">TYPE_ALIAS</a><ul class="description"><li>Public static const <a href="../datatype-int.htm" class="link">int</a> <span class="smallTitle">TYPE_ALIAS</span><span class="defVal"> = 0x1000</span></li><li>Constant for aliases</li></ul></li><li class="Collapsed" id="_instance"><a href="javascript:void(0);" class="property-pri" target="main">$_instance</a><ul class="description"><li>Private static <a href="../datatype-mixed.htm" class="link">mixed</a> <span class="smallTitle">$_instance</span><span class="defVal"> = null</span></li><li>Singleton instance</li></ul></li><li class="Collapsed" id="_store"><a href="javascript:void(0);" class="property-pri" target="main">$_store</a><ul class="description"><li>Private <a href="../datatype-array.htm" class="link">array</a> <span class="smallTitle">$_store</span><span class="defVal"> = array()</span></li><li>The data container</li></ul></li><li class="Collapsed" id="_endPoint"><a href="javascript:void(0);" class="property-pri" target="main">$_endPoint</a><ul class="description"><li>Private <a href="../datatype-mixed.htm" class="link">mixed</a> <span class="smallTitle">$_endPoint</span></li><li>The current endpoint in the data container</li></ul></li></ul><h2>Functions</h2><ul class="summary"><li class="Collapsed" id="f525ccca5191fb"><a href="javascript:void(0);" class="method-pub" target="main">__construct</a>()<ul class="description"><li>Public <a href="../datatype-void.htm" class="link">void</a> <span class="smallTitle">__construct</span>()</li><li>Constructor should not be used.<br />
Use {@link getInstance()} instead.</li></ul></li><li class="Collapsed" id="f525ccca51939e"><a href="javascript:void(0);" class="method-pub" target="main">getInstance</a>()<ul class="description"><li>Public static <a href="../Swift/class-Swift_DependencyContainer.htm" class="link">Swift\Swift_DependencyContainer</a> <span class="smallTitle">getInstance</span>()</li><li>Returns a singleton of the DependencyContainer.</li></ul></li><li class="Collapsed" id="f525ccca519629"><a href="javascript:void(0);" class="method-pub" target="main">listItems</a>()<ul class="description"><li>Public <a href="../datatype-array.htm" class="link">array</a> <span class="smallTitle">listItems</span>()</li><li>List the names of all items stored in the Container.</li></ul></li><li class="Collapsed" id="f525ccca51984f"><a href="javascript:void(0);" class="method-pub" target="main">has</a>(<a href="../datatype-string.htm" class="link">string</a> $itemName)<ul class="description"><li>Public <a href="../datatype-boolean.htm" class="link">boolean</a> <span class="smallTitle">has</span>(<a href="../datatype-string.htm" class="link">string</a> $itemName)</li><li>Test if an item is registered in this container with the given name.</li><li class="smaller">@param string $itemName</li><li class="smaller">@see register()</li></ul></li><li class="Collapsed" id="f525ccca519be2"><a href="javascript:void(0);" class="method-pub" target="main">lookup</a>(<a href="../datatype-string.htm" class="link">string</a> $itemName)<ul class="description"><li>Public <a href="../datatype-mixed.htm" class="link">mixed</a> <span class="smallTitle">lookup</span>(<a href="../datatype-string.htm" class="link">string</a> $itemName)</li><li>Lookup the item with the given $itemName.</li><li class="smaller">@param string $itemName</li><li class="smaller">@throws Swift_DependencyException If the dependency is not found</li><li class="smaller">@see register()</li></ul></li><li class="Collapsed" id="f525ccca51a126"><a href="javascript:void(0);" class="method-pub" target="main">createDependenciesFor</a>(<a href="../datatype-string.htm" class="link">string</a> $itemName)<ul class="description"><li>Public <a href="../datatype-array.htm" class="link">array</a> <span class="smallTitle">createDependenciesFor</span>(<a href="../datatype-string.htm" class="link">string</a> $itemName)</li><li>Create an array of arguments passed to the constructor of $itemName.</li><li class="smaller">@param string $itemName</li></ul></li><li class="Collapsed" id="f525ccca51a555"><a href="javascript:void(0);" class="method-pub" target="main">register</a>(<a href="../datatype-string.htm" class="link">string</a> $itemName)<ul class="description"><li>Public <a href="../Swift/class-Swift_DependencyContainer.htm" class="link">Swift\Swift_DependencyContainer</a> <span class="smallTitle">register</span>(<a href="../datatype-string.htm" class="link">string</a> $itemName)</li><li>Register a new dependency with $itemName.<br />
This method returns the current DependencyContainer instance because it requires the use of the fluid interface to set the specific details for the dependency.</li><li class="smaller">@param string $itemName</li><li class="smaller">@see asNewInstanceOf(), asSharedInstanceOf(), asValue()</li></ul></li><li class="Collapsed" id="f525ccca51a923"><a href="javascript:void(0);" class="method-pub" target="main">asValue</a>(<a href="../datatype-mixed.htm" class="link">mixed</a> $value)<ul class="description"><li>Public <a href="../Swift/class-Swift_DependencyContainer.htm" class="link">Swift\Swift_DependencyContainer</a> <span class="smallTitle">asValue</span>(<a href="../datatype-mixed.htm" class="link">mixed</a> $value)</li><li>Specify the previously registered item as a literal value.<br />
{@link register()} must be called before this will work.</li><li class="smaller">@param mixed $value</li></ul></li><li class="Collapsed" id="f525ccca51ac8a"><a href="javascript:void(0);" class="method-pub" target="main">asAliasOf</a>(<a href="../datatype-string.htm" class="link">string</a> $lookup)<ul class="description"><li>Public <a href="../Swift/class-Swift_DependencyContainer.htm" class="link">Swift\Swift_DependencyContainer</a> <span class="smallTitle">asAliasOf</span>(<a href="../datatype-string.htm" class="link">string</a> $lookup)</li><li>Specify the previously registered item as an alias of another item.</li><li class="smaller">@param string $lookup</li></ul></li><li class="Collapsed" id="f525ccca51afe2"><a href="javascript:void(0);" class="method-pub" target="main">asNewInstanceOf</a>(<a href="../datatype-string.htm" class="link">string</a> $className)<ul class="description"><li>Public <a href="../Swift/class-Swift_DependencyContainer.htm" class="link">Swift\Swift_DependencyContainer</a> <span class="smallTitle">asNewInstanceOf</span>(<a href="../datatype-string.htm" class="link">string</a> $className)</li><li>Specify the previously registered item as a new instance of $className.<br />
{@link register()} must be called before this will work.<br />
Any arguments can be set with {@link withDependencies()}, {@link addConstructorValue()} or {@link addConstructorLookup()}.</li><li class="smaller">@param string $className</li><li class="smaller">@see withDependencies(), addConstructorValue(), addConstructorLookup()</li></ul></li><li class="Collapsed" id="f525ccca51b3c2"><a href="javascript:void(0);" class="method-pub" target="main">asSharedInstanceOf</a>(<a href="../datatype-string.htm" class="link">string</a> $className)<ul class="description"><li>Public <a href="../Swift/class-Swift_DependencyContainer.htm" class="link">Swift\Swift_DependencyContainer</a> <span class="smallTitle">asSharedInstanceOf</span>(<a href="../datatype-string.htm" class="link">string</a> $className)</li><li>Specify the previously registered item as a shared instance of $className.<br />
{@link register()} must be called before this will work.</li><li class="smaller">@param string $className</li></ul></li><li class="Collapsed" id="f525ccca51b737"><a href="javascript:void(0);" class="method-pub" target="main">withDependencies</a>(<a href="../datatype-array.htm" class="link">array</a> $lookups)<ul class="description"><li>Public <a href="../Swift/class-Swift_DependencyContainer.htm" class="link">Swift\Swift_DependencyContainer</a> <span class="smallTitle">withDependencies</span>(<a href="../datatype-array.htm" class="link">array</a> $lookups)</li><li>Specify a list of injected dependencies for the previously registered item.<br />
This method takes an array of lookup names.</li><li class="smaller">@param array $lookups</li><li class="smaller">@see addConstructorValue(), addConstructorLookup()</li></ul></li><li class="Collapsed" id="f525ccca51bb4d"><a href="javascript:void(0);" class="method-pub" target="main">addConstructorValue</a>(<a href="../datatype-mixed.htm" class="link">mixed</a> $value)<ul class="description"><li>Public <a href="../Swift/class-Swift_DependencyContainer.htm" class="link">Swift\Swift_DependencyContainer</a> <span class="smallTitle">addConstructorValue</span>(<a href="../datatype-mixed.htm" class="link">mixed</a> $value)</li><li>Specify a literal (non looked up) value for the constructor of the previously registered item.</li><li class="smaller">@param mixed $value</li><li class="smaller">@see withDependencies(), addConstructorLookup()</li></ul></li><li class="Collapsed" id="f525ccca51bf8c"><a href="javascript:void(0);" class="method-pub" target="main">addConstructorLookup</a>(<a href="../datatype-string.htm" class="link">string</a> $lookup)<ul class="description"><li>Public <a href="../Swift/class-Swift_DependencyContainer.htm" class="link">Swift\Swift_DependencyContainer</a> <span class="smallTitle">addConstructorLookup</span>(<a href="../datatype-string.htm" class="link">string</a> $lookup)</li><li>Specify a dependency lookup for the constructor of the previously registered item.</li><li class="smaller">@param string $lookup</li><li class="smaller">@see withDependencies(), addConstructorValue()</li></ul></li><li class="Collapsed" id="f525ccca51c3e4"><a href="javascript:void(0);" class="method-pri" target="main">_getValue</a>(<a href="../datatype-mixed.htm" class="link">mixed</a> $itemName)<ul class="description"><li>Private <a href="../datatype-void.htm" class="link">void</a> <span class="smallTitle">_getValue</span>(<a href="../datatype-mixed.htm" class="link">mixed</a> $itemName)</li><li>Get the literal value with $itemName</li></ul></li><li class="Collapsed" id="f525ccca51c5f4"><a href="javascript:void(0);" class="method-pri" target="main">_createAlias</a>(<a href="../datatype-mixed.htm" class="link">mixed</a> $itemName)<ul class="description"><li>Private <a href="../datatype-void.htm" class="link">void</a> <span class="smallTitle">_createAlias</span>(<a href="../datatype-mixed.htm" class="link">mixed</a> $itemName)</li><li>Resolve an alias to another item</li></ul></li><li class="Collapsed" id="f525ccca51c812"><a href="javascript:void(0);" class="method-pri" target="main">_createNewInstance</a>(<a href="../datatype-mixed.htm" class="link">mixed</a> $itemName)<ul class="description"><li>Private <a href="../datatype-void.htm" class="link">void</a> <span class="smallTitle">_createNewInstance</span>(<a href="../datatype-mixed.htm" class="link">mixed</a> $itemName)</li><li>Create a fresh instance of $itemName</li></ul></li><li class="Collapsed" id="f525ccca51cae9"><a href="javascript:void(0);" class="method-pri" target="main">_createSharedInstance</a>(<a href="../datatype-mixed.htm" class="link">mixed</a> $itemName)<ul class="description"><li>Private <a href="../datatype-void.htm" class="link">void</a> <span class="smallTitle">_createSharedInstance</span>(<a href="../datatype-mixed.htm" class="link">mixed</a> $itemName)</li><li>Create and register a shared instance of $itemName</li></ul></li><li class="Collapsed" id="f525ccca51ce06"><a href="javascript:void(0);" class="method-pri" target="main">_getEndPoint</a>()<ul class="description"><li>Private <a href="../datatype-void.htm" class="link">void</a> <span class="smallTitle">_getEndPoint</span>()</li><li>Get the current endpoint in the store</li></ul></li><li class="Collapsed" id="f525ccca51d015"><a href="javascript:void(0);" class="method-pri" target="main">_resolveArgs</a>(<a href="../datatype-array.htm" class="link">array</a> $args)<ul class="description"><li>Private <a href="../datatype-void.htm" class="link">void</a> <span class="smallTitle">_resolveArgs</span>(<a href="../datatype-array.htm" class="link">array</a> $args)</li><li>Get an argument list with dependencies resolved</li></ul></li><li class="Collapsed" id="f525ccca51d343"><a href="javascript:void(0);" class="method-pri" target="main">_lookupRecursive</a>(<a href="../datatype-mixed.htm" class="link">mixed</a> $item)<ul class="description"><li>Private <a href="../datatype-void.htm" class="link">void</a> <span class="smallTitle">_lookupRecursive</span>(<a href="../datatype-mixed.htm" class="link">mixed</a> $item)</li><li>Resolve a single dependency with an collections</li></ul></li></ul>
	</div>
	<div id="footer">Documentation generated on Oct 15, 2013, 0:03:44 -0500 by <a href="http://pear.php.net/package/PHP_UML/" target="_new">PHP_UML</a></div>
</body>
</html>