<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
	<meta http-equiv="content-type" content="text/html; charset=iso-8859-1"/>
	<title>class ezcBaseFeatures</title>
	<link type="text/css" rel="stylesheet" href="../$resources/style.css"/>
	<script type="text/javascript" language="javascript" src="../$resources/treeview.js"></script>
</head>
<body onload="toggler.setupTreeView('MainList');toggler.backToMemorizedState('MainList', 'btnToggle')">
	<ul class="navig">
	<li><a href="javascript:toggler.toggleAll('MainList', 'btnToggle')" class="expandAllBtn" id="btnToggle">Expand all</a></li><li><a href="../help.htm" class="helpBtn">Help</a></li><li><a href="../index-all.htm" class="indexAllBtn">Index</a></li><li><a href="class-ezcBaseWhateverException.htm" class="left">Prev class</a></li><li><a href="package-summary.htm" class="top">Package</a></li><li><a href="class-ezcBaseFile.htm" class="right">Next class</a></li>
	</ul>
	<h1 class="class">ezcBaseFeatures</h1>
	<div id="MainList">
	<div class="description"><p>Class <span class="title">Base\ezcBaseFeatures</span></p><ul class="description"><li>Provides methods needed to check for features.<br />
<br />
Example:<br />
&lt;code&gt; &lt;?php echo &quot;supports uid: &quot; . ezcBaseFeatures::supportsUserId() . &quot;\n&quot;; echo &quot;supports symlink: &quot; . ezcBaseFeatures::supportsSymLink() . &quot;\n&quot;; echo &quot;supports hardlink: &quot; . ezcBaseFeatures::supportsLink() . &quot;\n&quot;; echo &quot;has imagemagick identify: &quot; . ezcBaseFeatures::hasImageIdentify() . &quot;\n&quot;; echo &quot; identify path: &quot; . ezcBaseFeatures::getImageIdentifyExecutable() . &quot;\n&quot;; echo &quot;has imagemagick convert: &quot; . ezcBaseFeatures::hasImageConvert() . &quot;\n&quot;; echo &quot; convert path: &quot; . ezcBaseFeatures::getImageConvertExecutable() . &quot;\n&quot;; echo &quot;has gzip extension: &quot; . ezcBaseFeatures::hasExtensionSupport( 'zlib' ) . &quot;\n&quot;; echo &quot;has pdo_mysql 1.0.2: &quot; . ezcBaseFeatures::hasExtensionSupport( 'pdo_mysql', '1.0.2' ) . &quot;\n&quot; ?&gt; &lt;/code&gt;</li><li class="smaller">@package Base</li><li class="smaller">@version //autogentag//</li><li>File: DEV/tools/phpcallgraph-0.8.0/lib/ezcomponents/Base/src/features.php</li></ul></div><h2>Properties</h2><ul class="summary"><li class="Collapsed" id="imageConvert"><a href="javascript:void(0);" class="property-pri" target="main">$imageConvert</a><ul class="description"><li>Private static <a href="../datatype-string.htm" class="link">string</a> <span class="smallTitle">$imageConvert</span><span class="defVal"> = null</span></li><li>Used to store the path of the ImageMagick convert utility.<br />
<br />
It is initialized in the {@link getImageConvertExecutable()} function.</li></ul></li><li class="Collapsed" id="imageIdentify"><a href="javascript:void(0);" class="property-pri" target="main">$imageIdentify</a><ul class="description"><li>Private static <a href="../datatype-string.htm" class="link">string</a> <span class="smallTitle">$imageIdentify</span><span class="defVal"> = null</span></li><li>Used to store the path of the ImageMagick identify utility.<br />
<br />
It is initialized in the {@link getImageIdentifyExecutable()} function.</li></ul></li><li class="Collapsed" id="os"><a href="javascript:void(0);" class="property-pri" target="main">$os</a><ul class="description"><li>Private static <a href="../datatype-string.htm" class="link">string</a> <span class="smallTitle">$os</span><span class="defVal"> = null</span></li><li>Used to store the operating system.<br />
<br />
It is initialized in the {@link os()} function.</li></ul></li></ul><h2>Functions</h2><ul class="summary"><li class="Collapsed" id="f525ccca82cb9e"><a href="javascript:void(0);" class="method-pub" target="main">supportsLink</a>()<ul class="description"><li>Public static <a href="../datatype-bool.htm" class="link">bool</a> <span class="smallTitle">supportsLink</span>()</li><li>Determines if hardlinks are supported.</li></ul></li><li class="Collapsed" id="f525ccca82cdd1"><a href="javascript:void(0);" class="method-pub" target="main">supportsSymLink</a>()<ul class="description"><li>Public static <a href="../datatype-bool.htm" class="link">bool</a> <span class="smallTitle">supportsSymLink</span>()</li><li>Determines if symlinks are supported.</li></ul></li><li class="Collapsed" id="f525ccca82cfff"><a href="javascript:void(0);" class="method-pub" target="main">supportsUserId</a>()<ul class="description"><li>Public static <a href="../datatype-bool.htm" class="link">bool</a> <span class="smallTitle">supportsUserId</span>()</li><li>Determines if posix uids are supported.</li></ul></li><li class="Collapsed" id="f525ccca82d22f"><a href="javascript:void(0);" class="method-pub" target="main">hasImageConvert</a>()<ul class="description"><li>Public static <a href="../datatype-bool.htm" class="link">bool</a> <span class="smallTitle">hasImageConvert</span>()</li><li>Determines if the ImageMagick convert utility is installed.</li></ul></li><li class="Collapsed" id="f525ccca82d451"><a href="javascript:void(0);" class="method-pub" target="main">getImageConvertExecutable</a>()<ul class="description"><li>Public static <a href="../datatype-string.htm" class="link">string</a> <span class="smallTitle">getImageConvertExecutable</span>()</li><li>Returns the path to the ImageMagick convert utility.<br />
<br />
On Linux, Unix,... it will return something like: /usr/bin/convert On Windows it will return something like: C:\Windows\System32\convert.exe</li></ul></li><li class="Collapsed" id="f525ccca82d73f"><a href="javascript:void(0);" class="method-pub" target="main">hasImageIdentify</a>()<ul class="description"><li>Public static <a href="../datatype-bool.htm" class="link">bool</a> <span class="smallTitle">hasImageIdentify</span>()</li><li>Determines if the ImageMagick identify utility is installed.</li></ul></li><li class="Collapsed" id="f525ccca82d98f"><a href="javascript:void(0);" class="method-pub" target="main">getImageIdentifyExecutable</a>()<ul class="description"><li>Public static <a href="../datatype-string.htm" class="link">string</a> <span class="smallTitle">getImageIdentifyExecutable</span>()</li><li>Returns the path to the ImageMagick identify utility.<br />
<br />
On Linux, Unix,... it will return something like: /usr/bin/identify On Windows it will return something like: C:\Windows\System32\identify.exe</li></ul></li><li class="Collapsed" id="f525ccca82dc85"><a href="javascript:void(0);" class="method-pub" target="main">hasExtensionSupport</a>(<a href="../datatype-string.htm" class="link">string</a> $extension, <a href="../datatype-string.htm" class="link">string</a> $version<span class="defVal"> = null</span>)<ul class="description"><li>Public static <a href="../datatype-bool.htm" class="link">bool</a> <span class="smallTitle">hasExtensionSupport</span>(<a href="../datatype-string.htm" class="link">string</a> $extension, <a href="../datatype-string.htm" class="link">string</a> $version<span class="defVal"> = null</span>)</li><li>Determines if the specified extension is loaded.<br />
<br />
If $version is specified, the specified extension will be tested also against the version of the loaded extension.<br />
<br />
Examples:<br />
&lt;code&gt; hasExtensionSupport( 'gzip' ); &lt;/code&gt; will return true if gzip extension is loaded.<br />
<br />
&lt;code&gt; hasExtensionSupport( 'pdo_mysql', '1.0.2' ); &lt;/code&gt; will return true if pdo_mysql extension is loaded and its version is at least 1.0.2.</li><li class="smaller">@param string $extension</li><li class="smaller">@param string $version</li></ul></li><li class="Collapsed" id="f525ccca82e1af"><a href="javascript:void(0);" class="method-pub" target="main">hasFunction</a>(<a href="../datatype-string.htm" class="link">string</a> $functionName)<ul class="description"><li>Public static <a href="../datatype-bool.htm" class="link">bool</a> <span class="smallTitle">hasFunction</span>(<a href="../datatype-string.htm" class="link">string</a> $functionName)</li><li>Determines if the specified function is available.<br />
<br />
Examples:<br />
&lt;code&gt; ezcBaseFeatures::hasFunction( 'imagepstext' ); &lt;/code&gt; will return true if support for Type 1 fonts is available with your GD extension.</li><li class="smaller">@param string $functionName</li></ul></li><li class="Collapsed" id="f525ccca82e561"><a href="javascript:void(0);" class="method-pub" target="main">classExists</a>(<a href="../datatype-string.htm" class="link">string</a> $className, <a href="../datatype-bool.htm" class="link">bool</a> $autoload<span class="defVal"> = true</span>)<ul class="description"><li>Public static <a href="../datatype-bool.htm" class="link">bool</a> <span class="smallTitle">classExists</span>(<a href="../datatype-string.htm" class="link">string</a> $className, <a href="../datatype-bool.htm" class="link">bool</a> $autoload<span class="defVal"> = true</span>)</li><li>Returns if a given class exists.<br />
Checks for a given class name and returns if this class exists or not.<br />
Catches the ezcBaseAutoloadException and returns false, if it was thrown.</li><li class="smaller">@param string $className The class to check for.</li><li class="smaller">@param bool $autoload True to use __autoload(), otherwise false.</li><li class="smaller">@return bool True if the class exists. Otherwise false.</li></ul></li><li class="Collapsed" id="f525ccca82ea06"><a href="javascript:void(0);" class="method-pub" target="main">os</a>()<ul class="description"><li>Public static <a href="../datatype-string.htm" class="link">string</a> <span class="smallTitle">os</span>()</li><li>Returns the operating system on which PHP is running.<br />
<br />
This method returns a sanitized form of the OS name, example return values are &quot;Windows&quot;, &quot;Mac&quot;, &quot;Linux&quot; and &quot;FreeBSD&quot;. In all other cases it returns the value of the internal PHP constant PHP_OS.</li></ul></li><li class="Collapsed" id="f525ccca82ef32"><a href="javascript:void(0);" class="method-pub" target="main">findExecutableInPath</a>(<a href="../datatype-string.htm" class="link">string</a> $fileName)<ul class="description"><li>Public static <a href="../datatype-string.htm" class="link">string</a> <span class="smallTitle">findExecutableInPath</span>(<a href="../datatype-string.htm" class="link">string</a> $fileName)</li><li>Returns the path of the specified executable, if it can be found in the system's path.<br />
<br />
It scans the PATH enviroment variable based on the OS to find the $fileName. For Windows, the path is with \, not /.  If $fileName is not found, it returns null.</li><li class="smaller">@todo consider using getenv( 'PATH' ) instead of $_ENV['PATH']</li><li class="smaller">@param string $fileName</li></ul></li><li class="Collapsed" id="f525ccca82f954"><a href="javascript:void(0);" class="method-pub" target="main">reset</a>()<ul class="description"><li>Public static <a href="../datatype-void.htm" class="link">void</a> <span class="smallTitle">reset</span>()</li><li>Reset the cached information.</li><li class="smaller">@access private</li><li class="smaller">@ignore </li></ul></li></ul>
	</div>
	<div id="footer">Documentation generated on Oct 15, 2013, 0:03:45 -0500 by <a href="http://pear.php.net/package/PHP_UML/" target="_new">PHP_UML</a></div>
</body>
</html>