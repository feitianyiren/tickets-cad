<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
	<meta http-equiv="content-type" content="text/html; charset=iso-8859-1"/>
	<title>class PorterStemmer</title>
	<link type="text/css" rel="stylesheet" href="$resources/style.css"/>
	<script type="text/javascript" language="javascript" src="$resources/treeview.js"></script>
</head>
<body onload="toggler.setupTreeView('MainList');toggler.backToMemorizedState('MainList', 'btnToggle')">
	<ul class="navig">
	<li><a href="javascript:toggler.toggleAll('MainList', 'btnToggle')" class="expandAllBtn" id="btnToggle">Expand all</a></li><li><a href="help.htm" class="helpBtn">Help</a></li><li><a href="index-all.htm" class="indexAllBtn">Index</a></li><li><a href="class-RefEll.htm" class="left">Prev class</a></li><li><a href="package-summary.htm" class="top">Package</a></li><li><a href="class-FUNC.htm" class="right">Next class</a></li>
	</ul>
	<h1 class="class">PorterStemmer</h1>
	<div id="MainList">
	<div class="description"><p>Class <span class="title">PorterStemmer</span></p><ul class="description"><li>PorterStemmer Insert description here</li><li class="smaller">@category </li><li class="smaller">@package </li><li class="smaller">@author </li><li class="smaller">@copyright </li><li class="smaller">@license </li><li class="smaller">@version </li><li class="smaller">@link </li><li class="smaller">@see </li><li class="smaller">@since </li><li>File: incs/stemmer.php</li></ul></div><h2>Properties</h2><ul class="summary"><li class="Collapsed" id="regex_consonant"><a href="javascript:void(0);" class="property-pri" target="main">$regex_consonant</a><ul class="description"><li>Private static <a href="datatype-string.htm" class="link">string</a> <span class="smallTitle">$regex_consonant</span><span class="defVal"> = &#039;(?:[bcdfghjklmnpqrstvwxz]|(?&lt;=[aeiou])y|^y)&#039;</span></li><li>Regex for matching a consonant</li></ul></li><li class="Collapsed" id="regex_vowel"><a href="javascript:void(0);" class="property-pri" target="main">$regex_vowel</a><ul class="description"><li>Private static <a href="datatype-string.htm" class="link">string</a> <span class="smallTitle">$regex_vowel</span><span class="defVal"> = &#039;(?:[aeiou]|(?&lt;![aeiou])y)&#039;</span></li><li>Regex for matching a vowel</li></ul></li><li class="Collapsed" id="cache"><a href="javascript:void(0);" class="property-pri" target="main">$cache</a><ul class="description"><li>Private static <a href="datatype-array.htm" class="link">array</a> <span class="smallTitle">$cache</span><span class="defVal"> = array()</span></li><li>Cache for mass stemmings. Do not use for mass stemmings of *different* words. Use for stemming words from documents for example, where the same word may crop up multiple times.</li></ul></li></ul><h2>Functions</h2><ul class="summary"><li class="Collapsed" id="f525ccca3d2ab2"><a href="javascript:void(0);" class="method-pub" target="main">Stem</a>(<a href="datatype-string.htm" class="link">string</a> $word, <a href="datatype-bool.htm" class="link">bool</a> $cache<span class="defVal"> = false</span>)<ul class="description"><li>Public static <a href="datatype-string.htm" class="link">string</a> <span class="smallTitle">Stem</span>(<a href="datatype-string.htm" class="link">string</a> $word, <a href="datatype-bool.htm" class="link">bool</a> $cache<span class="defVal"> = false</span>)</li><li>Stems a word. Simple huh?</li><li class="smaller">@param string $word Word to stem</li><li class="smaller">@param bool $cache Whether to use caching</li><li class="smaller">@return string Stemmed word</li></ul></li><li class="Collapsed" id="f525ccca3d3127"><a href="javascript:void(0);" class="method-pri" target="main">step1ab</a>(<a href="datatype-mixed.htm" class="link">mixed</a> $word)<ul class="description"><li>Private static <a href="datatype-void.htm" class="link">void</a> <span class="smallTitle">step1ab</span>(<a href="datatype-mixed.htm" class="link">mixed</a> $word)</li><li>Step 1</li></ul></li><li class="Collapsed" id="f525ccca3d3986"><a href="javascript:void(0);" class="method-pri" target="main">step1c</a>(<a href="datatype-string.htm" class="link">string</a> $word)<ul class="description"><li>Private static <a href="datatype-void.htm" class="link">void</a> <span class="smallTitle">step1c</span>(<a href="datatype-string.htm" class="link">string</a> $word)</li><li>Step 1c</li><li class="smaller">@param string $word Word to stem</li></ul></li><li class="Collapsed" id="f525ccca3d3d2e"><a href="javascript:void(0);" class="method-pri" target="main">step2</a>(<a href="datatype-string.htm" class="link">string</a> $word)<ul class="description"><li>Private static <a href="datatype-void.htm" class="link">void</a> <span class="smallTitle">step2</span>(<a href="datatype-string.htm" class="link">string</a> $word)</li><li>Step 2</li><li class="smaller">@param string $word Word to stem</li></ul></li><li class="Collapsed" id="f525ccca3d46cd"><a href="javascript:void(0);" class="method-pri" target="main">step3</a>(<a href="datatype-string.htm" class="link">string</a> $word)<ul class="description"><li>Private static <a href="datatype-void.htm" class="link">void</a> <span class="smallTitle">step3</span>(<a href="datatype-string.htm" class="link">string</a> $word)</li><li>Step 3</li><li class="smaller">@param string $word String to stem</li></ul></li><li class="Collapsed" id="f525ccca3d4c98"><a href="javascript:void(0);" class="method-pri" target="main">step4</a>(<a href="datatype-string.htm" class="link">string</a> $word)<ul class="description"><li>Private static <a href="datatype-void.htm" class="link">void</a> <span class="smallTitle">step4</span>(<a href="datatype-string.htm" class="link">string</a> $word)</li><li>Step 4</li><li class="smaller">@param string $word Word to stem</li></ul></li><li class="Collapsed" id="f525ccca3d5659"><a href="javascript:void(0);" class="method-pri" target="main">step5</a>(<a href="datatype-string.htm" class="link">string</a> $word)<ul class="description"><li>Private static <a href="datatype-void.htm" class="link">void</a> <span class="smallTitle">step5</span>(<a href="datatype-string.htm" class="link">string</a> $word)</li><li>Step 5</li><li class="smaller">@param string $word Word to stem</li></ul></li><li class="Collapsed" id="f525ccca3d5bf4"><a href="javascript:void(0);" class="method-pri" target="main">replace</a>(<a href="datatype-string.htm" class="link">string</a> &#38;$str, <a href="datatype-string.htm" class="link">string</a> $check, <a href="datatype-string.htm" class="link">string</a> $repl, <a href="datatype-int.htm" class="link">int</a> $m<span class="defVal"> = null</span>)<ul class="description"><li>Private static <a href="datatype-bool.htm" class="link">bool</a> <span class="smallTitle">replace</span>(<a href="datatype-string.htm" class="link">string</a> &#38;$str, <a href="datatype-string.htm" class="link">string</a> $check, <a href="datatype-string.htm" class="link">string</a> $repl, <a href="datatype-int.htm" class="link">int</a> $m<span class="defVal"> = null</span>)</li><li>Replaces the first string with the second, at the end of the string. If third arg is given, then the preceding string must match that m count at least.</li><li class="smaller">@param string $str String to check</li><li class="smaller">@param string $check Ending to check for</li><li class="smaller">@param string $repl Replacement string</li><li class="smaller">@param int $m Optional minimum number of m() to meet</li><li class="smaller">@return bool Whether the $check string was at the end</li></ul></li><li class="Collapsed" id="f525ccca3d62e0"><a href="javascript:void(0);" class="method-pri" target="main">m</a>(<a href="datatype-string.htm" class="link">string</a> $str)<ul class="description"><li>Private static <a href="datatype-int.htm" class="link">int</a> <span class="smallTitle">m</span>(<a href="datatype-string.htm" class="link">string</a> $str)</li><li>What, you mean it's not obvious from the name? <br />
m() measures the number of consonant sequences in $str. if c is a consonant sequence and v a vowel sequence, and &lt;..&gt; indicates arbitrary presence, <br />
&lt;c&gt;&lt;v&gt;       gives 0 &lt;c&gt;vc&lt;v&gt;     gives 1 &lt;c&gt;vcvc&lt;v&gt;   gives 2 &lt;c&gt;vcvcvc&lt;v&gt; gives 3</li><li class="smaller">@param string $str The string to return the m count for</li><li class="smaller">@return int The m count</li></ul></li><li class="Collapsed" id="f525ccca3d6774"><a href="javascript:void(0);" class="method-pri" target="main">doubleConsonant</a>(<a href="datatype-string.htm" class="link">string</a> $str)<ul class="description"><li>Private static <a href="datatype-bool.htm" class="link">bool</a> <span class="smallTitle">doubleConsonant</span>(<a href="datatype-string.htm" class="link">string</a> $str)</li><li>Returns true/false as to whether the given string contains two of the same consonant next to each other at the end of the string.</li><li class="smaller">@param string $str String to check</li><li class="smaller">@return bool Result</li></ul></li><li class="Collapsed" id="f525ccca3d6b10"><a href="javascript:void(0);" class="method-pri" target="main">cvc</a>(<a href="datatype-string.htm" class="link">string</a> $str)<ul class="description"><li>Private static <a href="datatype-bool.htm" class="link">bool</a> <span class="smallTitle">cvc</span>(<a href="datatype-string.htm" class="link">string</a> $str)</li><li>Checks for ending CVC sequence where second C is not W, X or Y</li><li class="smaller">@param string $str String to check</li><li class="smaller">@return bool Result</li></ul></li></ul>
	</div>
	<div id="footer">Documentation generated on Oct 15, 2013, 0:03:44 -0500 by <a href="http://pear.php.net/package/PHP_UML/" target="_new">PHP_UML</a></div>
</body>
</html>