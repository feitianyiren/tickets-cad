<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
	<meta http-equiv="content-type" content="text/html; charset=iso-8859-1"/>
	<title>class ezcConsoleStandardInputHelpGenerator</title>
	<link type="text/css" rel="stylesheet" href="../$resources/style.css"/>
	<script type="text/javascript" language="javascript" src="../$resources/treeview.js"></script>
</head>
<body onload="toggler.setupTreeView('MainList');toggler.backToMemorizedState('MainList', 'btnToggle')">
	<ul class="navig">
	<li><a href="javascript:toggler.toggleAll('MainList', 'btnToggle')" class="expandAllBtn" id="btnToggle">Expand all</a></li><li><a href="../help.htm" class="helpBtn">Help</a></li><li><a href="../index-all.htm" class="indexAllBtn">Index</a></li><li><a href="class-ezcConsoleArguments.htm" class="left">Prev class</a></li><li><a href="package-summary.htm" class="top">Package</a></li><li><a href="class-ezcConsoleOption.htm" class="right">Next class</a></li>
	</ul>
	<h1 class="class">ezcConsoleStandardInputHelpGenerator</h1>
	<div id="MainList">
	<div class="description"><p>Class <span class="title">ConsoleTools\ezcConsoleStandardInputHelpGenerator</span> implements <a href="../ConsoleTools/interface-ezcConsoleInputHelpGenerator.htm" class="link2">ConsoleTools\ezcConsoleInputHelpGenerator</a></p><ul class="description"><li>Standard help generator for {@link ezcConsoleInput}.<br />
<br />
Standard help generation as {@link ezcConsoleInput} did from the start.</li><li class="smaller">@package ConsoleTools</li><li class="smaller">@version //autogen//</li><li class="smaller">@access private</li><li class="smaller">@TODO Verify interface and make it public to replace the validation in</li><li>All implemented interfaces: <a href="../ConsoleTools/interface-ezcConsoleInputHelpGenerator.htm" class="link2">ConsoleTools\ezcConsoleInputHelpGenerator</a></li><li>File: DEV/tools/phpcallgraph-0.8.0/lib/ezcomponents/ConsoleTools/src/input/help_generators/standard.php</li></ul></div><h2>Properties</h2><ul class="summary"><li class="Collapsed" id="input"><a href="javascript:void(0);" class="property-pri" target="main">$input</a><ul class="description"><li>Private <a href="../ConsoleTools/class-ezcConsoleInput.htm" class="link">ConsoleTools\ezcConsoleInput</a> <span class="smallTitle">$input</span></li><li>Input object.</li></ul></li></ul><h2>Functions</h2><ul class="summary"><li class="Collapsed" id="f525ccca97ba15"><a href="javascript:void(0);" class="method-pub" target="main">__construct</a>(<a href="../ConsoleTools/class-ezcConsoleInput.htm" class="link">ConsoleTools\ezcConsoleInput</a> $input)<ul class="description"><li>Public <a href="../datatype-void.htm" class="link">void</a> <span class="smallTitle">__construct</span>(<a href="../ConsoleTools/class-ezcConsoleInput.htm" class="link">ConsoleTools\ezcConsoleInput</a> $input)</li><li>Creates a new help generator.<br />
<br />
Creates a new help generator for the given $input.</li><li class="smaller">@param ezcConsoleInput $input</li><li>Creates a new help generator.<br />
<br />
Creates a new help generator for the given $input.<br/><span class="note">(copied from interface <a href="../ConsoleTools/interface-ezcConsoleInputHelpGenerator.htm" class="link">ConsoleTools\ezcConsoleInputHelpGenerator</a>)</span></li></ul></li><li class="Collapsed" id="f525ccca97bc7e"><a href="javascript:void(0);" class="method-pub" target="main">generateUngroupedOptionHelp</a>(<a href="../datatype-bool.htm" class="link">bool</a> $long<span class="defVal"> = false</span>, <a href="../datatype-array.htm" class="link">array</a> $optionsFilter<span class="defVal"> = null</span>)<ul class="description"><li>Public <span class="link">array(int=>array(int=>string))</span> <span class="smallTitle">generateUngroupedOptionHelp</span>(<a href="../datatype-bool.htm" class="link">bool</a> $long<span class="defVal"> = false</span>, <a href="../datatype-array.htm" class="link">array</a> $optionsFilter<span class="defVal"> = null</span>)</li><li>Generates help information as a multidimensional array.<br />
<br />
This method generates a tabular view on the help information of a program. The returned array has the following structure:<br />
<br />
&lt;code&gt; &lt;?php array( 0 =&gt; array( 0 =&gt; '&lt;option short/long name&gt;', 1 =&gt; '&lt;option help, depending on the $long parameter&gt;' ), 1 =&gt; array( 0 =&gt; '&lt;option short name&gt; / &lt;option long name&gt;', 1 =&gt; '&lt;option help, depending on the $long parameter&gt;' ), // ...<br />
); ?&gt; &lt;/code&gt; <br />
Each row of the array represents the help information for a single option.<br />
The first cell of a row contains the option name (maybe short, long or both), the second cell contains the help text of the option.<br />
<br />
The returned array is used by {@link ezcConsoleInput} for different purposes.<br />
For example, the user can retrieve it raw through the {@link ezcConsoleInput::getHelp()} method, he can generate a help {@link ezcConsoleTable} through {@link ezcConsoleInput::getHelpTable()} are can generate a printable help text through {@link ezcConsoleInput::getHelpText()}.<br />
<br />
The parameter $long defines if the long or short help text of the options should be used in the second cell of the returned array. The $optionsFilter parameter is used to restrict the generated help to a certain sub-set of options. It consists of an array of short or long names of the options to include.</li><li class="smaller">@param bool $long</li><li class="smaller">@param array(int=&gt;string) $optionsFilter</li><li>Generates help information as a multidimensional array.<br />
<br />
This method generates a tabular view on the help information of a program. The returned array has the following structure:<br />
<br />
&lt;code&gt; &lt;?php array( 0 =&gt; array( 0 =&gt; '&lt;option short/long name&gt;', 1 =&gt; '&lt;option help, depending on the $long parameter&gt;' ), 1 =&gt; array( 0 =&gt; '&lt;option short name&gt; / &lt;option long name&gt;', 1 =&gt; '&lt;option help, depending on the $long parameter&gt;' ), // ...<br />
); ?&gt; &lt;/code&gt; <br />
Each row of the array represents the help information for a single option.<br />
The first cell of a row contains the option name (maybe short, long or both), the second cell contains the help text of the option.<br />
<br />
The returned array is used by {@link ezcConsoleInput} for different purposes.<br />
For example, the user can retrieve it raw through the {@link ezcConsoleInput::getHelp()} method, he can generate a help {@link ezcConsoleTable} through {@link ezcConsoleInput::getHelpTable()} are can generate a printable help text through {@link ezcConsoleInput::getHelpText()}.<br />
<br />
The parameter $long defines if the long or short help text of the options should be used in the second cell of the returned array. The $optionsFilter parameter is used to restrict the generated help to a certain sub-set of options. It consists of an array of short or long names of the options to include.<br/><span class="note">(copied from interface <a href="../ConsoleTools/interface-ezcConsoleInputHelpGenerator.htm" class="link">ConsoleTools\ezcConsoleInputHelpGenerator</a>)</span></li></ul></li><li class="Collapsed" id="f525ccca97c1ab"><a href="javascript:void(0);" class="method-pub" target="main">generateGroupedOptionHelp</a>(<a href="../datatype-array.htm" class="link">array</a> $groups, <a href="../datatype-bool.htm" class="link">bool</a> $long<span class="defVal"> = false</span>, <a href="../datatype-array.htm" class="link">array</a> $optionsFilter<span class="defVal"> = null</span>)<ul class="description"><li>Public <span class="link">array(string=>array(int=>array(int=>string)))</span> <span class="smallTitle">generateGroupedOptionHelp</span>(<a href="../datatype-array.htm" class="link">array</a> $groups, <a href="../datatype-bool.htm" class="link">bool</a> $long<span class="defVal"> = false</span>, <a href="../datatype-array.htm" class="link">array</a> $optionsFilter<span class="defVal"> = null</span>)</li><li>Generates help information as a multidimensional array, grouped in categories.<br />
<br />
This method behaves similar to {@link generateUngroupedOptionHelp()}. In contrast to the latter one, this method returns an array with 1 dimension more, grouping options into categories. The $groups parameter defines the categories to generate. Each category may contain an arbitrary number of options, options might occur in different categories.<br />
<br />
The returned array has the follorwing format:<br />
<br />
&lt;code&gt; &lt;?php array( '&lt;category name&gt;' =&gt; array( 0 =&gt; array( 0 =&gt; '&lt;option short/long name&gt;', 1 =&gt; '&lt;option help, depending on the $long parameter&gt;' ), 1 =&gt; array( 0 =&gt; '&lt;option short name&gt; / &lt;option long name&gt;', 1 =&gt; '&lt;option help, depending on the $long parameter&gt;' ), // ...<br />
), '&lt;category name&gt;' =&gt; array( // ...<br />
), // ...<br />
); ?&gt; &lt;/code&gt; <br />
The $long parameter, as in {@link generateUngroupedOptionHelp()} determines if the options short or long help is to be used. The $params array can in addition be used to determine if a parameter is displayed at all. If $optionsFilter is submitted and is not null, only options listed in it will be shown in the help at all.</li><li class="smaller">@param array(string=&gt;array(string)) $groups</li><li class="smaller">@param bool $long</li><li class="smaller">@param array(string) $params</li><li>Generates help information as a multidimensional array, grouped in categories.<br />
<br />
This method behaves similar to {@link generateUngroupedOptionHelp()}. In contrast to the latter one, this method returns an array with 1 dimension more, grouping options into categories. The $groups parameter defines the categories to generate. Each category may contain an arbitrary number of options, options might occur in different categories.<br />
<br />
The returned array has the follorwing format:<br />
<br />
&lt;code&gt; &lt;?php array( '&lt;category name&gt;' =&gt; array( 0 =&gt; array( 0 =&gt; '&lt;option short/long name&gt;', 1 =&gt; '&lt;option help, depending on the $long parameter&gt;' ), 1 =&gt; array( 0 =&gt; '&lt;option short name&gt; / &lt;option long name&gt;', 1 =&gt; '&lt;option help, depending on the $long parameter&gt;' ), // ...<br />
), '&lt;category name&gt;' =&gt; array( // ...<br />
), // ...<br />
); ?&gt; &lt;/code&gt; <br />
The $long parameter, as in {@link generateUngroupedOptionHelp()} determines if the options short or long help is to be used. The $params array can in addition be used to determine if a parameter is displayed at all. If $optionsFilter is submitted and is not null, only options listed in it will be shown in the help at all.<br/><span class="note">(copied from interface <a href="../ConsoleTools/interface-ezcConsoleInputHelpGenerator.htm" class="link">ConsoleTools\ezcConsoleInputHelpGenerator</a>)</span></li></ul></li><li class="Collapsed" id="f525ccca97c7c9"><a href="javascript:void(0);" class="method-pub" target="main">generateArgumentHelp</a>(<a href="../datatype-bool.htm" class="link">bool</a> $long<span class="defVal"> = false</span>)<ul class="description"><li>Public <span class="link">array(int=>array(int=>string))</span> <span class="smallTitle">generateArgumentHelp</span>(<a href="../datatype-bool.htm" class="link">bool</a> $long<span class="defVal"> = false</span>)</li><li>Generates help information as a multi-dimensonal array for the given $argumentDefinition.<br />
<br />
This method generates a tabular help information for the given $argumentDefinition in the following format:<br />
<br />
&lt;code&gt; &lt;?php array( 0 =&gt; array( 0 =&gt; '&lt;argument synopsis&gt;', 1 =&gt; '&lt;argument help text&gt;' ), 1 =&gt; array( 0 =&gt; '&lt;argument synopsis&gt;', 1 =&gt; '&lt;argument help text&gt;' ), // ...<br />
) ?&gt; &lt;/code&gt; <br />
The $long parameter defines if the long of short help text should be used.</li><li class="smaller">@param bool $long</li><li>Generates help information as a multi-dimensonal array for the given $argumentDefinition.<br />
<br />
This method generates a tabular help information for the given $argumentDefinition in the following format:<br />
<br />
&lt;code&gt; &lt;?php array( 0 =&gt; array( 0 =&gt; '&lt;argument synopsis&gt;', 1 =&gt; '&lt;argument help text&gt;' ), 1 =&gt; array( 0 =&gt; '&lt;argument synopsis&gt;', 1 =&gt; '&lt;argument help text&gt;' ), // ...<br />
) ?&gt; &lt;/code&gt; <br />
The $long parameter defines if the long of short help text should be used.<br/><span class="note">(copied from interface <a href="../ConsoleTools/interface-ezcConsoleInputHelpGenerator.htm" class="link">ConsoleTools\ezcConsoleInputHelpGenerator</a>)</span></li></ul></li><li class="Collapsed" id="f525ccca97ccfc"><a href="javascript:void(0);" class="method-pri" target="main">getOptionHelpRow</a>(<a href="../datatype-bool.htm" class="link">bool</a> $long, <a href="../ConsoleTools/class-ezcConsoleOption.htm" class="link">ConsoleTools\ezcConsoleOption</a> $param)<ul class="description"><li>Private <a href="../datatype-string.htm" class="link">string</a> <span class="smallTitle">getOptionHelpRow</span>(<a href="../datatype-bool.htm" class="link">bool</a> $long, <a href="../ConsoleTools/class-ezcConsoleOption.htm" class="link">ConsoleTools\ezcConsoleOption</a> $param)</li><li>Creates 1 text row for displaying options help.<br />
<br />
Returns a single array entry for the {@link getOptionHelpRow()} method.</li><li class="smaller">@param bool $long</li><li class="smaller">@param ezcConsoleOption $param</li></ul></li><li class="Collapsed" id="f525ccca97d0f6"><a href="javascript:void(0);" class="method-pub" target="main">generateSynopsis</a>(<a href="../datatype-array.htm" class="link">array</a> $optionFilter<span class="defVal"> = null</span>)<ul class="description"><li>Public <a href="../datatype-string.htm" class="link">string</a> <span class="smallTitle">generateSynopsis</span>(<a href="../datatype-array.htm" class="link">array</a> $optionFilter<span class="defVal"> = null</span>)</li><li>Generates a command line synopsis for the options and arguments.<br />
<br />
This method generates a synopsis string that lists the options and parameters available, indicating their usage.</li><li>Generates a command line synopsis for the options and arguments.<br />
<br />
This method generates a synopsis string that lists the options and parameters available, indicating their usage.<br/><span class="note">(copied from interface <a href="../ConsoleTools/interface-ezcConsoleInputHelpGenerator.htm" class="link">ConsoleTools\ezcConsoleInputHelpGenerator</a>)</span></li></ul></li><li class="Collapsed" id="f525ccca97d554"><a href="javascript:void(0);" class="method-pri" target="main">createOptionSynopsis</a>(<a href="../ConsoleTools/class-ezcConsoleOption.htm" class="link">ConsoleTools\ezcConsoleOption</a> $option, <span class="link">array(int=>string)</span> &#38;$usedOptions, <a href="../datatype-int.htm" class="link">int</a> $depth<span class="defVal"> = 0</span>)<ul class="description"><li>Private <a href="../datatype-string.htm" class="link">string</a> <span class="smallTitle">createOptionSynopsis</span>(<a href="../ConsoleTools/class-ezcConsoleOption.htm" class="link">ConsoleTools\ezcConsoleOption</a> $option, <span class="link">array(int=>string)</span> &#38;$usedOptions, <a href="../datatype-int.htm" class="link">int</a> $depth<span class="defVal"> = 0</span>)</li><li>Returns the synopsis string for a single option and its dependencies.<br />
<br />
This method returns a part of the program synopsis, specifically for a certain parameter. The method recursively adds depending parameters up to the 2nd depth level to the synopsis. The second parameter is used to store the short names of all options that have already been used in the synopsis (to avoid adding an option twice). The 3rd parameter determines the actual deps in the option dependency recursion to terminate that after 2 recursions.</li><li class="smaller">@param ezcConsoleOption $option The option to include.</li><li class="smaller">@param array(int=&gt;string) $usedOptions Array of used option short names.</li><li class="smaller">@param int $depth Current recursion depth.</li><li class="smaller">@return string The synopsis for this parameter.</li></ul></li><li class="Collapsed" id="f525ccca97de0c"><a href="javascript:void(0);" class="method-pri" target="main">createArgumentsSynopsis</a>()<ul class="description"><li>Private <a href="../datatype-string.htm" class="link">string</a> <span class="smallTitle">createArgumentsSynopsis</span>()</li><li>Generate synopsis for arguments.</li><li class="smaller">@return string The synopsis string.</li></ul></li></ul>
	</div>
	<div id="footer">Documentation generated on Oct 15, 2013, 0:03:45 -0500 by <a href="http://pear.php.net/package/PHP_UML/" target="_new">PHP_UML</a></div>
</body>
</html>