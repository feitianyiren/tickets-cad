<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
	<meta http-equiv="content-type" content="text/html; charset=iso-8859-1"/>
	<title>class ezcConsoleOption</title>
	<link type="text/css" rel="stylesheet" href="../$resources/style.css"/>
	<script type="text/javascript" language="javascript" src="../$resources/treeview.js"></script>
</head>
<body onload="toggler.setupTreeView('MainList');toggler.backToMemorizedState('MainList', 'btnToggle')">
	<ul class="navig">
	<li><a href="javascript:toggler.toggleAll('MainList', 'btnToggle')" class="expandAllBtn" id="btnToggle">Expand all</a></li><li><a href="../help.htm" class="helpBtn">Help</a></li><li><a href="../index-all.htm" class="indexAllBtn">Index</a></li><li><a href="class-ezcConsoleStandardInputHelpGenerator.htm" class="left">Prev class</a></li><li><a href="package-summary.htm" class="top">Package</a></li><li><a href="class-ezcConsoleStandardInputValidator.htm" class="right">Next class</a></li>
	</ul>
	<h1 class="class">ezcConsoleOption</h1>
	<div id="MainList">
	<div class="description"><p>Class <span class="title">ConsoleTools\ezcConsoleOption</span></p><ul class="description"><li>Objects of this class store data about a single option for ezcConsoleInput.<br />
<br />
This class represents a single command line option, which can be handled by the ezcConsoleInput class. This classes only purpose is the storage of the parameter data, the handling of options and arguments is done by the class {@link ezcConsoleInput}.</li><li class="smaller">@property -read string $short</li><li class="smaller">@property -read string $long</li><li class="smaller">@property int $type</li><li class="smaller">@property mixed $default</li><li class="smaller">@property bool $multiple</li><li class="smaller">@property string $shorthelp</li><li class="smaller">@property string $longhelp</li><li class="smaller">@property bool $arguments</li><li class="smaller">@property bool $mandatory</li><li class="smaller">@property bool $isHelpOption</li><li class="smaller">@package ConsoleTools</li><li class="smaller">@version //autogen//</li><li>File: DEV/tools/phpcallgraph-0.8.0/lib/ezcomponents/ConsoleTools/src/input/option.php</li></ul></div><h2>Properties</h2><ul class="summary"><li class="Collapsed" id="properties"><a href="javascript:void(0);" class="property-pro" target="main">$properties</a><ul class="description"><li>Protected <span class="link">array(string=>mixed)</span> <span class="smallTitle">$properties</span></li><li>Container to hold the properties</li></ul></li><li class="Collapsed" id="dependencies"><a href="javascript:void(0);" class="property-pro" target="main">$dependencies</a><ul class="description"><li>Protected <a href="../datatype-array.htm" class="link">array</a> <span class="smallTitle">$dependencies</span><span class="defVal"> = array()</span></li><li>Dependency rules of this parameter.</li><li class="smaller">@see ezcConsoleOption::addDependency()</li><li class="smaller">@see ezcConsoleOption::removeDependency()</li><li class="smaller">@see ezcConsoleOption::hasDependency()</li><li class="smaller">@see ezcConsoleOption::getDependencies()</li><li class="smaller">@see ezcConsoleOption::resetDependencies()</li></ul></li><li class="Collapsed" id="exclusions"><a href="javascript:void(0);" class="property-pro" target="main">$exclusions</a><ul class="description"><li>Protected <a href="../datatype-array.htm" class="link">array</a> <span class="smallTitle">$exclusions</span><span class="defVal"> = array()</span></li><li>Exclusion rules of this parameter.</li><li class="smaller">@see ezcConsoleOption::addExclusion()</li><li class="smaller">@see ezcConsoleOption::removeExclusion()</li><li class="smaller">@see ezcConsoleOption::hasExclusion()</li><li class="smaller">@see ezcConsoleOption::getExclusions()</li><li class="smaller">@see ezcConsoleOption::resetExclusions()</li></ul></li><li class="Collapsed" id="value"><a href="javascript:void(0);" class="property-pub" target="main">$value</a><ul class="description"><li>Public <a href="../datatype-bool.htm" class="link">bool</a> <span class="smallTitle">$value</span><span class="defVal"> = false</span></li><li>The value the parameter was assigned to when being submitted.<br />
Boolean false indicates the parameter was not submitted, boolean true means the parameter was submitted, but did not have a value.<br />
In any other case, this caries the submitted value.</li></ul></li></ul><h2>Functions</h2><ul class="summary"><li class="Collapsed" id="f525ccca980e7c"><a href="javascript:void(0);" class="method-pub" target="main">__construct</a>(<a href="../datatype-string.htm" class="link">string</a> $short<span class="defVal"> = &#039;&#039;</span>, <a href="../datatype-string.htm" class="link">string</a> $long, <a href="../datatype-int.htm" class="link">int</a> $type<span class="defVal"> = ezcConsoleInputTYPE_NONE</span>, <a href="../datatype-mixed.htm" class="link">mixed</a> $default<span class="defVal"> = null</span>, <a href="../datatype-bool.htm" class="link">bool</a> $multiple<span class="defVal"> = false</span>, <a href="../datatype-string.htm" class="link">string</a> $shorthelp<span class="defVal"> = &#039;No help available.&#039;</span>, <a href="../datatype-string.htm" class="link">string</a> $longhelp<span class="defVal"> = &#039;Sorry, there is no help text available for this parameter.&#039;</span>, <a href="../datatype-array.htm" class="link">array</a> $dependencies<span class="defVal"> = array()</span>, <a href="../datatype-array.htm" class="link">array</a> $exclusions<span class="defVal"> = array()</span>, <a href="../datatype-bool.htm" class="link">bool</a> $arguments<span class="defVal"> = true</span>, <a href="../datatype-bool.htm" class="link">bool</a> $mandatory<span class="defVal"> = false</span>, <a href="../datatype-bool.htm" class="link">bool</a> $isHelpOption<span class="defVal"> = false</span>)<ul class="description"><li>Public <a href="../datatype-void.htm" class="link">void</a> <span class="smallTitle">__construct</span>(<a href="../datatype-string.htm" class="link">string</a> $short<span class="defVal"> = &#039;&#039;</span>, <a href="../datatype-string.htm" class="link">string</a> $long, <a href="../datatype-int.htm" class="link">int</a> $type<span class="defVal"> = ezcConsoleInputTYPE_NONE</span>, <a href="../datatype-mixed.htm" class="link">mixed</a> $default<span class="defVal"> = null</span>, <a href="../datatype-bool.htm" class="link">bool</a> $multiple<span class="defVal"> = false</span>, <a href="../datatype-string.htm" class="link">string</a> $shorthelp<span class="defVal"> = &#039;No help available.&#039;</span>, <a href="../datatype-string.htm" class="link">string</a> $longhelp<span class="defVal"> = &#039;Sorry, there is no help text available for this parameter.&#039;</span>, <a href="../datatype-array.htm" class="link">array</a> $dependencies<span class="defVal"> = array()</span>, <a href="../datatype-array.htm" class="link">array</a> $exclusions<span class="defVal"> = array()</span>, <a href="../datatype-bool.htm" class="link">bool</a> $arguments<span class="defVal"> = true</span>, <a href="../datatype-bool.htm" class="link">bool</a> $mandatory<span class="defVal"> = false</span>, <a href="../datatype-bool.htm" class="link">bool</a> $isHelpOption<span class="defVal"> = false</span>)</li><li>Create a new parameter struct.<br />
Creates a new basic parameter struct with the base information &quot;$short&quot; (the short name of the parameter) and &quot;$long&quot; (the long version). You simply apply these parameters as strings (without '-' or '--'). So <br />
&lt;code&gt; $param = new ezcConsoleOption( 'f', 'file' ); &lt;/code&gt; <br />
will result in a parameter that can be accessed using <br />
&lt;code&gt; $ mytool -f &lt;/code&gt; <br />
or <br />
&lt;code&gt; $ mytool --file &lt;/code&gt; .<br />
<br />
The newly created parameter contains only it's 2 names and each other attribute is set to it's default value. You can simply manipulate those attributes by accessing them directly.</li><li class="smaller">@param string $short Short name of the parameter without '-' (eg. 'f').</li><li class="smaller">@param string $long Long name of the parameter without '--' (eg. 'file').</li><li class="smaller">@param int $type Value type of the parameter. One of ezcConsoleInput::TYPE_*.</li><li class="smaller">@param mixed $default Default value the parameter holds if not submitted.</li><li class="smaller">@param bool $multiple If the parameter may be submitted multiple times.</li><li class="smaller">@param string $shorthelp Short help text.</li><li class="smaller">@param string $longhelp Long help text.</li><li class="smaller">@param array(int=&gt;ezcConsoleOptionRule) $dependencies Dependency rules.</li><li class="smaller">@param array(int=&gt;ezcConsoleOptionRule) $exclusions Exclusion rules.</li><li class="smaller">@param bool $arguments Whether supplying arguments is allowed when this parameter is set.</li><li class="smaller">@param bool $mandatory Whether the parameter must be always submitted.</li><li class="smaller">@param bool $isHelpOption Indicates that the given parameter is a help</li><li class="smaller">@throws ezcConsoleInvalidOptionNameException If the option names start with a &quot;-&quot;</li></ul></li><li class="Collapsed" id="f525ccca981f1d"><a href="javascript:void(0);" class="method-pub" target="main">addDependency</a>(<a href="../ConsoleTools/class-ezcConsoleOptionRule.htm" class="link">ConsoleTools\ezcConsoleOptionRule</a> $rule)<ul class="description"><li>Public <a href="../datatype-void.htm" class="link">void</a> <span class="smallTitle">addDependency</span>(<a href="../ConsoleTools/class-ezcConsoleOptionRule.htm" class="link">ConsoleTools\ezcConsoleOptionRule</a> $rule)</li><li>Add a new dependency for a parameter.<br />
This registeres a new dependency rule with the parameter. If you try to add an already registered rule it will simply be ignored. Else, the submitted rule will be added to the parameter as a dependency.</li><li class="smaller">@param ezcConsoleOptionRule $rule The rule to add.</li></ul></li><li class="Collapsed" id="f525ccca982284"><a href="javascript:void(0);" class="method-pub" target="main">removeDependency</a>(<a href="../ConsoleTools/class-ezcConsoleOptionRule.htm" class="link">ConsoleTools\ezcConsoleOptionRule</a> $rule)<ul class="description"><li>Public <a href="../datatype-void.htm" class="link">void</a> <span class="smallTitle">removeDependency</span>(<a href="../ConsoleTools/class-ezcConsoleOptionRule.htm" class="link">ConsoleTools\ezcConsoleOptionRule</a> $rule)</li><li>Remove a dependency rule from a parameter.<br />
This removes a given rule from a parameter, if it exists. If the rule is not registered with the parameter, the method call will simply be ignored.</li><li class="smaller">@param ezcConsoleOptionRule $rule The rule to be removed.</li></ul></li><li class="Collapsed" id="f525ccca9825cd"><a href="javascript:void(0);" class="method-pub" target="main">removeAllDependencies</a>(<a href="../ConsoleTools/class-ezcConsoleOption.htm" class="link">ConsoleTools\ezcConsoleOption</a> $param)<ul class="description"><li>Public <a href="../datatype-void.htm" class="link">void</a> <span class="smallTitle">removeAllDependencies</span>(<a href="../ConsoleTools/class-ezcConsoleOption.htm" class="link">ConsoleTools\ezcConsoleOption</a> $param)</li><li>Remove all dependency rule referring to a parameter.<br />
This removes all dependency rules from a parameter, that refer to as specific parameter. If no rule is registered with this parameter as reference, the method call will simply be ignored.</li><li class="smaller">@param ezcConsoleOption $param The param to be check for rules.</li></ul></li><li class="Collapsed" id="f525ccca982905"><a href="javascript:void(0);" class="method-pub" target="main">hasDependency</a>(<a href="../ConsoleTools/class-ezcConsoleOption.htm" class="link">ConsoleTools\ezcConsoleOption</a> $param)<ul class="description"><li>Public <a href="../datatype-bool.htm" class="link">bool</a> <span class="smallTitle">hasDependency</span>(<a href="../ConsoleTools/class-ezcConsoleOption.htm" class="link">ConsoleTools\ezcConsoleOption</a> $param)</li><li>Returns if a dependency to the given option exists.<br />
Returns true if a dependency rule to the given option is registered, otherwise false.</li><li class="smaller">@param ezcConsoleOption $param The param to check if a dependency exists to.</li><li class="smaller">@return bool True if rule is registered, otherwise false.</li></ul></li><li class="Collapsed" id="f525ccca982c46"><a href="javascript:void(0);" class="method-pub" target="main">getDependencies</a>()<ul class="description"><li>Public <span class="link">array(int=>ezcConsoleOptionRule)</span> <span class="smallTitle">getDependencies</span>()</li><li>Returns the dependency rules registered with this parameter.<br />
Returns an array of registered dependencies.<br />
<br />
For example:<br />
&lt;code&gt; array( 0 =&gt; ezcConsoleOptionRule, 1 =&gt; ezcConsoleOptionRule, 2 =&gt; ezcConsoleOptionRule, ); &lt;/code&gt;</li><li class="smaller">@return array(int=&gt;ezcConsoleOptionRule) Dependency definition.</li></ul></li><li class="Collapsed" id="f525ccca982e7f"><a href="javascript:void(0);" class="method-pub" target="main">resetDependencies</a>()<ul class="description"><li>Public <a href="../datatype-void.htm" class="link">void</a> <span class="smallTitle">resetDependencies</span>()</li><li>Reset existing dependency rules.<br />
Deletes all registered dependency rules from the option definition.</li></ul></li><li class="Collapsed" id="f525ccca98307d"><a href="javascript:void(0);" class="method-pub" target="main">addExclusion</a>(<a href="../ConsoleTools/class-ezcConsoleOptionRule.htm" class="link">ConsoleTools\ezcConsoleOptionRule</a> $rule)<ul class="description"><li>Public <a href="../datatype-void.htm" class="link">void</a> <span class="smallTitle">addExclusion</span>(<a href="../ConsoleTools/class-ezcConsoleOptionRule.htm" class="link">ConsoleTools\ezcConsoleOptionRule</a> $rule)</li><li>Add a new exclusion for an option.<br />
This registeres a new exclusion rule with the option. If you try to add an already registered rule it will simply be ignored. Else, the submitted rule will be added to the option as a exclusion.</li><li class="smaller">@param ezcConsoleOptionRule $rule The rule to add.</li></ul></li><li class="Collapsed" id="f525ccca983416"><a href="javascript:void(0);" class="method-pub" target="main">removeExclusion</a>(<a href="../ConsoleTools/class-ezcConsoleOptionRule.htm" class="link">ConsoleTools\ezcConsoleOptionRule</a> $rule)<ul class="description"><li>Public <a href="../datatype-void.htm" class="link">void</a> <span class="smallTitle">removeExclusion</span>(<a href="../ConsoleTools/class-ezcConsoleOptionRule.htm" class="link">ConsoleTools\ezcConsoleOptionRule</a> $rule)</li><li>Remove a exclusion rule from a option.<br />
This removes a given rule from a option, if it exists. If the rule is not registered with the option, the method call will simply be ignored.</li><li class="smaller">@param ezcConsoleOptionRule $rule The rule to be removed.</li></ul></li><li class="Collapsed" id="f525ccca9837b5"><a href="javascript:void(0);" class="method-pub" target="main">removeAllExclusions</a>(<a href="../ConsoleTools/class-ezcConsoleOption.htm" class="link">ConsoleTools\ezcConsoleOption</a> $param)<ul class="description"><li>Public <a href="../datatype-void.htm" class="link">void</a> <span class="smallTitle">removeAllExclusions</span>(<a href="../ConsoleTools/class-ezcConsoleOption.htm" class="link">ConsoleTools\ezcConsoleOption</a> $param)</li><li>Remove all exclusion rule referring to a option.<br />
This removes all exclusion rules from a option, that refer to as specific option. If no rule is registered with this option as reference, the method call will simply be ignored.</li><li class="smaller">@param ezcConsoleOption $param The option to remove rule for.</li></ul></li><li class="Collapsed" id="f525ccca983b6d"><a href="javascript:void(0);" class="method-pub" target="main">hasExclusion</a>(<a href="../ConsoleTools/class-ezcConsoleOption.htm" class="link">ConsoleTools\ezcConsoleOption</a> $param)<ul class="description"><li>Public <a href="../datatype-bool.htm" class="link">bool</a> <span class="smallTitle">hasExclusion</span>(<a href="../ConsoleTools/class-ezcConsoleOption.htm" class="link">ConsoleTools\ezcConsoleOption</a> $param)</li><li>Returns if a given exclusion rule is registered with the option.<br />
Returns true if a exclusion rule to the given option is registered, otherwise false.</li><li class="smaller">@param ezcConsoleOption $param The param to check if exclusions exist for.</li><li class="smaller">@return bool True if rule is registered, otherwise false.</li></ul></li><li class="Collapsed" id="f525ccca983f0b"><a href="javascript:void(0);" class="method-pub" target="main">getExclusions</a>()<ul class="description"><li>Public <span class="link">array(int=>ezcConsoleOptionRule)</span> <span class="smallTitle">getExclusions</span>()</li><li>Returns the exclusion rules registered with this parameter.<br />
Returns an array of registered exclusions.<br />
<br />
For example:<br />
&lt;code&gt; array( 0 =&gt; ezcConsoleOptionRule, 1 =&gt; ezcConsoleOptionRule, 2 =&gt; ezcConsoleOptionRule, ); &lt;/code&gt;</li><li class="smaller">@return array(int=&gt;ezcConsoleOptionRule) Exclusions definition.</li></ul></li><li class="Collapsed" id="f525ccca984208"><a href="javascript:void(0);" class="method-pub" target="main">resetExclusions</a>()<ul class="description"><li>Public <a href="../datatype-void.htm" class="link">void</a> <span class="smallTitle">resetExclusions</span>()</li><li>Reset existing exclusion rules.<br />
Deletes all registered exclusion rules from the option definition.</li></ul></li><li class="Collapsed" id="f525ccca984439"><a href="javascript:void(0);" class="method-pub" target="main">__get</a>(<a href="../datatype-string.htm" class="link">string</a> $key)<ul class="description"><li>Public <a href="../datatype-mixed.htm" class="link">mixed</a> <span class="smallTitle">__get</span>(<a href="../datatype-string.htm" class="link">string</a> $key)</li><li>Property read access.<br />
Provides read access to the properties of the object.</li><li class="smaller">@param string $key The name of the property.</li><li class="smaller">@return mixed The value if property exists and isset, otherwise null.</li><li class="smaller">@ignore </li></ul></li><li class="Collapsed" id="f525ccca9848c0"><a href="javascript:void(0);" class="method-pub" target="main">__set</a>(<a href="../datatype-string.htm" class="link">string</a> $key, <a href="../datatype-mixed.htm" class="link">mixed</a> $val)<ul class="description"><li>Public <a href="../datatype-void.htm" class="link">void</a> <span class="smallTitle">__set</span>(<a href="../datatype-string.htm" class="link">string</a> $key, <a href="../datatype-mixed.htm" class="link">mixed</a> $val)</li><li>Property write access.</li><li class="smaller">@param string $key Name of the property.</li><li class="smaller">@param mixed $val The value for the property.</li><li class="smaller">@throws ezcBasePropertyPermissionException</li><li class="smaller">@throws ezcBasePropertyNotFoundException</li><li class="smaller">@ignore </li></ul></li><li class="Collapsed" id="f525ccca985435"><a href="javascript:void(0);" class="method-pub" target="main">__isset</a>(<a href="../datatype-string.htm" class="link">string</a> $key)<ul class="description"><li>Public <a href="../datatype-bool.htm" class="link">bool</a> <span class="smallTitle">__isset</span>(<a href="../datatype-string.htm" class="link">string</a> $key)</li><li>Property isset access.</li><li class="smaller">@param string $key Name of the property.</li><li class="smaller">@return bool True is the property is set, otherwise false.</li><li class="smaller">@ignore </li></ul></li><li class="Collapsed" id="f525ccca9858ab"><a href="javascript:void(0);" class="method-pub" target="main">validateOptionName</a>(<a href="../datatype-string.htm" class="link">string</a> $name)<ul class="description"><li>Public static <a href="../datatype-bool.htm" class="link">bool</a> <span class="smallTitle">validateOptionName</span>(<a href="../datatype-string.htm" class="link">string</a> $name)</li><li>Returns if a given name if valid for use as a parameter name a parameter.<br />
Checks if a given parameter name is generally valid for use. It checks a) that the name does not start with '-' or '--' and b) if it contains whitespaces. Note, that this method does not check any conflicts with already used parameter names.</li><li class="smaller">@param string $name The name to check.</li><li class="smaller">@return bool True if the name is valid, otherwise false.</li></ul></li></ul>
	</div>
	<div id="footer">Documentation generated on Oct 15, 2013, 0:03:45 -0500 by <a href="http://pear.php.net/package/PHP_UML/" target="_new">PHP_UML</a></div>
</body>
</html>