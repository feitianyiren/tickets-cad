<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
	<meta http-equiv="content-type" content="text/html; charset=iso-8859-1"/>
	<title>class ezcConsoleOutput</title>
	<link type="text/css" rel="stylesheet" href="../$resources/style.css"/>
	<script type="text/javascript" language="javascript" src="../$resources/treeview.js"></script>
</head>
<body onload="toggler.setupTreeView('MainList');toggler.backToMemorizedState('MainList', 'btnToggle')">
	<ul class="navig">
	<li><a href="javascript:toggler.toggleAll('MainList', 'btnToggle')" class="expandAllBtn" id="btnToggle">Expand all</a></li><li><a href="../help.htm" class="helpBtn">Help</a></li><li><a href="../index-all.htm" class="indexAllBtn">Index</a></li><li><a href="class-ezcConsoleTableOptions.htm" class="left">Prev class</a></li><li><a href="package-summary.htm" class="top">Package</a></li><li><a href="class-ezcConsoleProgressbar.htm" class="right">Next class</a></li>
	</ul>
	<h1 class="class">ezcConsoleOutput</h1>
	<div id="MainList">
	<div class="description"><p>Class <span class="title">ConsoleTools\ezcConsoleOutput</span></p><ul class="description"><li>Class for handling console output.<br />
<br />
The ezcConsoleOutput class provides an interface to output text to the console. It deals with formating text in different ways and offers some comfortable options to deal with console text output.<br />
<br />
&lt;code&gt; // Create the output handler $out = new ezcConsoleOutput(); <br />
// Set the verbosity to level 10 $out-&gt;options-&gt;verbosityLevel = 10; // Enable auto wrapping of lines after 40 characters $out-&gt;options-&gt;autobreak    = 40; <br />
// Set the color of the default output format to green $out-&gt;formats-&gt;default-&gt;color   = 'green'; <br />
// Set the color of the output format named 'success' to white $out-&gt;formats-&gt;success-&gt;color   = 'white'; // Set the style of the output format named 'success' to bold $out-&gt;formats-&gt;success-&gt;style   = array( 'bold' ); <br />
// Set the color of the output format named 'failure' to red $out-&gt;formats-&gt;failure-&gt;color   = 'red'; // Set the style of the output format named 'failure' to bold $out-&gt;formats-&gt;failure-&gt;style   = array( 'bold' ); // Set the background color of the output format named 'failure' to blue $out-&gt;formats-&gt;failure-&gt;bgcolor = 'blue'; <br />
// Output text with default format $out-&gt;outputText( 'This is default text ' ); // Output text with format 'success' $out-&gt;outputText( 'including success message', 'success' ); // Some more output with default output.<br />
$out-&gt;outputText( &quot;and a manual linebreak.\n&quot; ); <br />
// Manipulate the later output $out-&gt;formats-&gt;success-&gt;color = 'green'; $out-&gt;formats-&gt;default-&gt;color = 'blue'; <br />
// This is visible, since we set verbosityLevel to 10, and printed in default format (now blue) $out-&gt;outputText( &quot;Some verbose output.\n&quot;, null, 10 ); // This is not visible, since we set verbosityLevel to 10 $out-&gt;outputText( &quot;Some more verbose output.\n&quot;, null, 20 ); // This is visible, since we set verbosityLevel to 10, and printed in format 'failure' $out-&gt;outputText( &quot;And some not so verbose, failure output.\n&quot;, 'failure', 5 ); &lt;/code&gt; <br />
For a list of valid colors, style attributes and background colors, please refer to {@link ezcConsoleOutputFormat}.<br />
<br />
ATTENTION: Windows operating systems do not support styling of text on the console. Therefore no styling sequences are generated on any version of this operating system.</li><li class="smaller">@property ezcConsoleOutputOptions $options</li><li class="smaller">@property ezcConsoleOutputFormats $formats</li><li class="smaller">@package ConsoleTools</li><li class="smaller">@version //autogen//</li><li class="smaller">@mainclass </li><li>File: DEV/tools/phpcallgraph-0.8.0/lib/ezcomponents/ConsoleTools/src/output.php</li></ul></div><h2>Properties</h2><ul class="summary"><li class="Collapsed" id="TARGET_OUTPUT"><a href="javascript:void(0);" class="property-pub" target="main">TARGET_OUTPUT</a><ul class="description"><li>Public static const <a href="../datatype-string.htm" class="link">string</a> <span class="smallTitle">TARGET_OUTPUT</span><span class="defVal"> = &quot;php://output&quot;</span></li><li>Target to print to standard out, with output buffering possibility.</li></ul></li><li class="Collapsed" id="TARGET_STDOUT"><a href="javascript:void(0);" class="property-pub" target="main">TARGET_STDOUT</a><ul class="description"><li>Public static const <a href="../datatype-string.htm" class="link">string</a> <span class="smallTitle">TARGET_STDOUT</span><span class="defVal"> = &quot;php://stdout&quot;</span></li><li>Target to print to standard out.</li></ul></li><li class="Collapsed" id="TARGET_STDERR"><a href="javascript:void(0);" class="property-pub" target="main">TARGET_STDERR</a><ul class="description"><li>Public static const <a href="../datatype-string.htm" class="link">string</a> <span class="smallTitle">TARGET_STDERR</span><span class="defVal"> = &quot;php://stderr&quot;</span></li><li>Target to print to standard error.</li></ul></li><li class="Collapsed" id="properties"><a href="javascript:void(0);" class="property-pro" target="main">$properties</a><ul class="description"><li>Protected <span class="link">array(string=>mixed)</span> <span class="smallTitle">$properties</span></li><li>Container to hold the properties</li></ul></li><li class="Collapsed" id="positionStored"><a href="javascript:void(0);" class="property-pro" target="main">$positionStored</a><ul class="description"><li>Protected <a href="../datatype-bool.htm" class="link">bool</a> <span class="smallTitle">$positionStored</span><span class="defVal"> = false</span></li><li>Whether a position has been stored before, using the storePos() method.</li><li class="smaller">@see ezcConsoleOutput::storePos()</li></ul></li><li class="Collapsed" id="color"><a href="javascript:void(0);" class="property-pro" target="main">$color</a><ul class="description"><li>Protected static <a href="../datatype-array.htm" class="link">array</a> <span class="smallTitle">$color</span><span class="defVal"> = array(&#039;gray&#039;=&gt;30,&#039;black&#039;=&gt;30,&#039;red&#039;=&gt;31,&#039;green&#039;=&gt;32,&#039;yellow&#039;=&gt;33,&#039;blue&#039;=&gt;34,&#039;magenta&#039;=&gt;35,&#039;cyan&#039;=&gt;36,&#039;white&#039;=&gt;37,&#039;default&#039;=&gt;39)</span></li><li>Stores the mapping of color names to their escape sequence values.</li></ul></li><li class="Collapsed" id="bgcolor"><a href="javascript:void(0);" class="property-pro" target="main">$bgcolor</a><ul class="description"><li>Protected static <a href="../datatype-array.htm" class="link">array</a> <span class="smallTitle">$bgcolor</span><span class="defVal"> = array(&#039;gray&#039;=&gt;40,&#039;black&#039;=&gt;40,&#039;red&#039;=&gt;41,&#039;green&#039;=&gt;42,&#039;yellow&#039;=&gt;43,&#039;blue&#039;=&gt;44,&#039;magenta&#039;=&gt;45,&#039;cyan&#039;=&gt;46,&#039;white&#039;=&gt;47,&#039;default&#039;=&gt;49,)</span></li><li>Stores the mapping of bgcolor names to their escape sequence values.</li></ul></li><li class="Collapsed" id="style"><a href="javascript:void(0);" class="property-pro" target="main">$style</a><ul class="description"><li>Protected static <a href="../datatype-array.htm" class="link">array</a> <span class="smallTitle">$style</span><span class="defVal"> = array(&#039;default&#039;=&gt;&#039;0&#039;,&#039;bold&#039;=&gt;1,&#039;faint&#039;=&gt;2,&#039;normal&#039;=&gt;22,&#039;italic&#039;=&gt;3,&#039;notitalic&#039;=&gt;23,&#039;underlined&#039;=&gt;4,&#039;doubleunderlined&#039;=&gt;21,&#039;notunderlined&#039;=&gt;24,&#039;blink&#039;=&gt;5,&#039;blinkfast&#039;=&gt;6,&#039;noblink&#039;=&gt;25,&#039;negative&#039;=&gt;7,&#039;positive&#039;=&gt;27,)</span></li><li>Stores the mapping of styles names to their escape sequence values.</li></ul></li><li class="Collapsed" id="escapeSequence"><a href="javascript:void(0);" class="property-pri" target="main">$escapeSequence</a><ul class="description"><li>Private <a href="../datatype-string.htm" class="link">string</a> <span class="smallTitle">$escapeSequence</span><span class="defVal"> = &quot;\033[%sm&quot;</span></li><li>Basic escape sequence string. Use sprintf() to insert escape codes.</li></ul></li><li class="Collapsed" id="targets"><a href="javascript:void(0);" class="property-pri" target="main">$targets</a><ul class="description"><li>Private <a href="../datatype-array.htm" class="link">array</a> <span class="smallTitle">$targets</span><span class="defVal"> = array()</span></li><li>Collection of targets to print to.</li></ul></li></ul><h2>Functions</h2><ul class="summary"><li class="Collapsed" id="f525ccca9cef48"><a href="javascript:void(0);" class="method-pub" target="main">__construct</a>(<a href="../ConsoleTools/class-ezcConsoleOutputFormats.htm" class="link">ConsoleTools\ezcConsoleOutputFormats</a> $formats<span class="defVal"> = null</span>, <a href="../datatype-array.htm" class="link">array</a> $options<span class="defVal"> = array()</span>)<ul class="description"><li>Public <a href="../datatype-void.htm" class="link">void</a> <span class="smallTitle">__construct</span>(<a href="../ConsoleTools/class-ezcConsoleOutputFormats.htm" class="link">ConsoleTools\ezcConsoleOutputFormats</a> $formats<span class="defVal"> = null</span>, <a href="../datatype-array.htm" class="link">array</a> $options<span class="defVal"> = array()</span>)</li><li>Create a new console output handler.</li><li class="smaller">@see ezcConsoleOutput::$options</li><li class="smaller">@see ezcConsoleOutputOptions</li><li class="smaller">@see ezcConsoleOutput::$formats</li><li class="smaller">@see ezcConsoleOutputFormats</li><li class="smaller">@param ezcConsoleOutputFormats $formats Formats to be used for output.</li><li class="smaller">@param array(string=&gt;string) $options Options to set.</li></ul></li><li class="Collapsed" id="f525ccca9cf5b7"><a href="javascript:void(0);" class="method-pub" target="main">setOptions</a>(<a href="../ConsoleTools/class-ezcConsoleOutputOptions.htm" class="link">ConsoleTools\ezcConsoleOutputOptions</a> $options)<ul class="description"><li>Public <a href="../datatype-void.htm" class="link">void</a> <span class="smallTitle">setOptions</span>(<a href="../ConsoleTools/class-ezcConsoleOutputOptions.htm" class="link">ConsoleTools\ezcConsoleOutputOptions</a> $options)</li><li>Set new options.<br />
This method allows you to change the options of an output handler.</li><li class="smaller">@param ezcConsoleOutputOptions $options The options to set.</li><li class="smaller">@throws ezcBaseSettingNotFoundException</li><li class="smaller">@throws ezcBaseSettingValueException</li><li class="smaller">@throws ezcBaseValueException</li></ul></li><li class="Collapsed" id="f525ccca9cfa87"><a href="javascript:void(0);" class="method-pub" target="main">getOptions</a>()<ul class="description"><li>Public <a href="../ConsoleTools/class-ezcConsoleOutputOptions.htm" class="link">ConsoleTools\ezcConsoleOutputOptions</a> <span class="smallTitle">getOptions</span>()</li><li>Returns the current options.<br />
Returns the options currently set for this output handler.</li><li class="smaller">@return ezcConsoleOutputOptions The current options.</li></ul></li><li class="Collapsed" id="f525ccca9cfcb9"><a href="javascript:void(0);" class="method-pub" target="main">__get</a>(<a href="../datatype-string.htm" class="link">string</a> $propertyName)<ul class="description"><li>Public <a href="../datatype-mixed.htm" class="link">mixed</a> <span class="smallTitle">__get</span>(<a href="../datatype-string.htm" class="link">string</a> $propertyName)</li><li>Property read access.</li><li class="smaller">@throws ezcBasePropertyNotFoundException</li><li class="smaller">@param string $propertyName Name of the property.</li><li class="smaller">@return mixed Value of the property or null.</li><li class="smaller">@ignore </li></ul></li><li class="Collapsed" id="f525ccca9d0108"><a href="javascript:void(0);" class="method-pub" target="main">__set</a>(<a href="../datatype-string.htm" class="link">string</a> $propertyName, <a href="../datatype-mixed.htm" class="link">mixed</a> $val)<ul class="description"><li>Public <a href="../datatype-void.htm" class="link">void</a> <span class="smallTitle">__set</span>(<a href="../datatype-string.htm" class="link">string</a> $propertyName, <a href="../datatype-mixed.htm" class="link">mixed</a> $val)</li><li>Property write access.</li><li class="smaller">@param string $propertyName Name of the property.</li><li class="smaller">@param mixed $val The value for the property.</li><li class="smaller">@throws ezcBaseValueException</li><li class="smaller">@throws ezcBaseValueException</li><li class="smaller">@ignore </li></ul></li><li class="Collapsed" id="f525ccca9d077e"><a href="javascript:void(0);" class="method-pub" target="main">__isset</a>(<a href="../datatype-string.htm" class="link">string</a> $propertyName)<ul class="description"><li>Public <a href="../datatype-bool.htm" class="link">bool</a> <span class="smallTitle">__isset</span>(<a href="../datatype-string.htm" class="link">string</a> $propertyName)</li><li>Property isset access.</li><li class="smaller">@param string $propertyName Name of the property.</li><li class="smaller">@return bool True is the property is set, otherwise false.</li><li class="smaller">@ignore </li></ul></li><li class="Collapsed" id="f525ccca9d0b26"><a href="javascript:void(0);" class="method-pub" target="main">outputText</a>(<a href="../datatype-string.htm" class="link">string</a> $text, <a href="../datatype-string.htm" class="link">string</a> $format<span class="defVal"> = &#039;default&#039;</span>, <a href="../datatype-int.htm" class="link">int</a> $verbosityLevel<span class="defVal"> = 1</span>)<ul class="description"><li>Public <a href="../datatype-void.htm" class="link">void</a> <span class="smallTitle">outputText</span>(<a href="../datatype-string.htm" class="link">string</a> $text, <a href="../datatype-string.htm" class="link">string</a> $format<span class="defVal"> = &#039;default&#039;</span>, <a href="../datatype-int.htm" class="link">int</a> $verbosityLevel<span class="defVal"> = 1</span>)</li><li>Print text to the console.<br />
<br />
Output a string to the console. If $format parameter is omitted, the default style is chosen. Style can either be a special style {@link ezcConsoleOutput::$options}, a style name {@link ezcConsoleOutput::$formats} or 'default' to print with the default styling.<br />
<br />
The $format parameter defines the name of a format. Formats are defined through the $formats proprty, which contains format definitions in form of {@link ezcConsoleOutputFormat} objects. The format influences the outer appearance of a message (e.g. color) as well as the target the message is printed to (e.g. STDERR).</li><li class="smaller">@throws ezcConsoleInvalidOutputTargetException</li><li class="smaller">@param string $text The text to print.</li><li class="smaller">@param string $format Format chosen for printing.</li><li class="smaller">@param int $verbosityLevel On which verbose level to output this message.</li></ul></li><li class="Collapsed" id="f525ccca9d15c6"><a href="javascript:void(0);" class="method-pub" target="main">outputLine</a>(<a href="../datatype-string.htm" class="link">string</a> $text<span class="defVal"> = &#039;&#039;</span>, <a href="../datatype-string.htm" class="link">string</a> $format<span class="defVal"> = &#039;default&#039;</span>, <a href="../datatype-int.htm" class="link">int</a> $verbosityLevel<span class="defVal"> = 1</span>)<ul class="description"><li>Public <a href="../datatype-void.htm" class="link">void</a> <span class="smallTitle">outputLine</span>(<a href="../datatype-string.htm" class="link">string</a> $text<span class="defVal"> = &#039;&#039;</span>, <a href="../datatype-string.htm" class="link">string</a> $format<span class="defVal"> = &#039;default&#039;</span>, <a href="../datatype-int.htm" class="link">int</a> $verbosityLevel<span class="defVal"> = 1</span>)</li><li>Print text to the console and automatically append a line break.<br />
<br />
This method acts similar to {@link ezcConsoleOutput::outputText()}, in fact it even uses it. The difference is, that outputLine() automatically appends a manual line break to the printed text. Besides that, you can leave out the $text parameter of outputLine() to only print a line break.<br />
<br />
The $format parameter defines the name of a format. Formats are defined through the $formats proprty, which contains format definitions in form of {@link ezcConsoleOutputFormat} objects. The format influences the outer appearance of a message (e.g. color) as well as the target the message is printed to (e.g. STDERR).</li><li class="smaller">@param string $text The text to print.</li><li class="smaller">@param string $format Format chosen for printing.</li><li class="smaller">@param int $verbosityLevel On which verbose level to output this message.</li></ul></li><li class="Collapsed" id="f525ccca9d1b10"><a href="javascript:void(0);" class="method-pub" target="main">formatText</a>(<a href="../datatype-string.htm" class="link">string</a> $text, <a href="../datatype-string.htm" class="link">string</a> $format<span class="defVal"> = &#039;default&#039;</span>)<ul class="description"><li>Public <a href="../datatype-string.htm" class="link">string</a> <span class="smallTitle">formatText</span>(<a href="../datatype-string.htm" class="link">string</a> $text, <a href="../datatype-string.htm" class="link">string</a> $format<span class="defVal"> = &#039;default&#039;</span>)</li><li>Returns a formated version of the text.<br />
<br />
If $format parameter is omitted, the default style is chosen. The format must be a valid registered format definition.  For information on the formats, see {@link ezcConsoleOutput::$formats}.</li><li class="smaller">@param string $text Text to apply style to.</li><li class="smaller">@param string $format Format chosen to be applied.</li></ul></li><li class="Collapsed" id="f525ccca9d1fab"><a href="javascript:void(0);" class="method-pub" target="main">storePos</a>()<ul class="description"><li>Public <a href="../datatype-void.htm" class="link">void</a> <span class="smallTitle">storePos</span>()</li><li>Stores the current cursor position.<br />
<br />
Saves the current cursor position to return to it using {@link ezcConsoleOutput::restorePos()}. Multiple calls to this method will override each other. Only the last position is saved.</li></ul></li><li class="Collapsed" id="f525ccca9d225f"><a href="javascript:void(0);" class="method-pub" target="main">restorePos</a>()<ul class="description"><li>Public <a href="../datatype-void.htm" class="link">void</a> <span class="smallTitle">restorePos</span>()</li><li>Restores a cursor position.<br />
<br />
Restores the cursor position last saved using {@link ezcConsoleOutput::storePos()}.</li><li class="smaller">@throws ezcConsoleNoPositionStoredException</li></ul></li><li class="Collapsed" id="f525ccca9d256e"><a href="javascript:void(0);" class="method-pub" target="main">toPos</a>(<a href="../datatype-int.htm" class="link">int</a> $column<span class="defVal"> = 1</span>)<ul class="description"><li>Public <a href="../datatype-void.htm" class="link">void</a> <span class="smallTitle">toPos</span>(<a href="../datatype-int.htm" class="link">int</a> $column<span class="defVal"> = 1</span>)</li><li>Move the cursor to a specific column of the current line.<br />
<br />
Moves the cursor to a specific column index of the current line (default is 1).</li><li class="smaller">@param int $column Column to jump to.</li></ul></li><li class="Collapsed" id="f525ccca9d2958"><a href="javascript:void(0);" class="method-pub" target="main">isValidFormatCode</a>(<a href="../datatype-string.htm" class="link">string</a> $type, <a href="../datatype-string.htm" class="link">string</a> $key)<ul class="description"><li>Public static <a href="../datatype-bool.htm" class="link">bool</a> <span class="smallTitle">isValidFormatCode</span>(<a href="../datatype-string.htm" class="link">string</a> $type, <a href="../datatype-string.htm" class="link">string</a> $key)</li><li>Returns if a format code is valid for the specific formating option.<br />
<br />
This method determines if a given code is valid for a specific formatting option ('color', 'bgcolor' or 'style').</li><li class="smaller">@see ezcConsoleOutput::getFormatCode();</li><li class="smaller">@param string $type Formating type.</li><li class="smaller">@param string $key Format option name.</li><li class="smaller">@return bool True if the code is valid.</li></ul></li><li class="Collapsed" id="f525ccca9d2f30"><a href="javascript:void(0);" class="method-pro" target="main">buildSequence</a>(<a href="../datatype-string.htm" class="link">string</a> $format<span class="defVal"> = &#039;default&#039;</span>)<ul class="description"><li>Protected <a href="../datatype-string.htm" class="link">string</a> <span class="smallTitle">buildSequence</span>(<a href="../datatype-string.htm" class="link">string</a> $format<span class="defVal"> = &#039;default&#039;</span>)</li><li>Returns the escape sequence for a specific format.<br />
<br />
Returns the default format escape sequence, if the requested format does not exist.</li><li class="smaller">@param string $format Name of the format.</li><li class="smaller">@return string The escape sequence.</li></ul></li><li class="Collapsed" id="f525ccca9d3646"><a href="javascript:void(0);" class="method-pro" target="main">getFormatCode</a>(<a href="../datatype-string.htm" class="link">string</a> $type, <a href="../datatype-string.htm" class="link">string</a> $key)<ul class="description"><li>Protected <a href="../datatype-int.htm" class="link">int</a> <span class="smallTitle">getFormatCode</span>(<a href="../datatype-string.htm" class="link">string</a> $type, <a href="../datatype-string.htm" class="link">string</a> $key)</li><li>Returns the code for a given formating option of a given type.<br />
<br />
$type is the type of formating ('color', 'bgcolor' or 'style'), $key the name of the format to lookup. Returns the numeric code for the requested format or 0 if format or type do not exist.</li><li class="smaller">@see ezcConsoleOutput::isValidFormatCode()</li><li class="smaller">@param string $type Formatting type.</li><li class="smaller">@param string $key Format option name.</li><li class="smaller">@return int The code representation.</li></ul></li></ul>
	</div>
	<div id="footer">Documentation generated on Oct 15, 2013, 0:03:45 -0500 by <a href="http://pear.php.net/package/PHP_UML/" target="_new">PHP_UML</a></div>
</body>
</html>