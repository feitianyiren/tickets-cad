<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
	<meta http-equiv="content-type" content="text/html; charset=iso-8859-1"/>
	<title>class ezcReflectionClass</title>
	<link type="text/css" rel="stylesheet" href="../$resources/style.css"/>
	<script type="text/javascript" language="javascript" src="../$resources/treeview.js"></script>
</head>
<body onload="toggler.setupTreeView('MainList');toggler.backToMemorizedState('MainList', 'btnToggle')">
	<ul class="navig">
	<li><a href="javascript:toggler.toggleAll('MainList', 'btnToggle')" class="expandAllBtn" id="btnToggle">Expand all</a></li><li><a href="../help.htm" class="helpBtn">Help</a></li><li><a href="../index-all.htm" class="indexAllBtn">Index</a></li><li><a href="package-summary.htm" class="top">Package</a></li><li><a href="class-ezcReflectionExtension.htm" class="right">Next class</a></li>
	</ul>
	<h1 class="class">ezcReflectionClass</h1>
	<div id="MainList">
	<div class="description"><p>Class <span class="title">Reflection\ezcReflectionClass</span> extends <span class="link">ReflectionClass</span> </p><ul class="description"><li>Extends the ReflectionClass using PHPDoc comments to provide type information</li><li class="smaller">@package Reflection</li><li class="smaller">@version //autogen//</li><li class="smaller">@author Stefan Marr &lt;mail@stefan-marr.de&gt;</li><li class="smaller">@author Falko Menge &lt;mail@falko-menge.de&gt;</li><li>All subclasses: <a href="../Reflection/class-ezcReflectionClassType.htm" class="link2">Reflection\ezcReflectionClassType</a></li><li>File: DEV/tools/phpcallgraph-0.8.0/lib/ezcomponents/Reflection/src/class.php</li></ul></div><h2>Properties</h2><ul class="summary"><li class="Collapsed" id="docParser"><a href="javascript:void(0);" class="property-pro" target="main">$docParser</a><ul class="description"><li>Protected <a href="../Reflection/interface-ezcReflectionDocParser.htm" class="link">Reflection\ezcReflectionDocParser</a> <span class="smallTitle">$docParser</span></li></ul></li><li class="Collapsed" id="class"><a href="javascript:void(0);" class="property-pro" target="main">$class</a><ul class="description"><li>Protected <span class="link">string|object|ReflectionClass</span> <span class="smallTitle">$class</span></li></ul></li></ul><h2>Functions</h2><ul class="summary"><li class="Collapsed" id="f525cccab285fc"><a href="javascript:void(0);" class="method-pub" target="main">__construct</a>(<span class="link">string|object|ReflectionClass</span> $argument)<ul class="description"><li>Public <a href="../datatype-void.htm" class="link">void</a> <span class="smallTitle">__construct</span>(<span class="link">string|object|ReflectionClass</span> $argument)</li><li>Constructs a new ezcReflectionClass object</li><li class="smaller">@param string|object|ReflectionClass $argument</li></ul></li><li class="Collapsed" id="f525cccab2897f"><a href="javascript:void(0);" class="method-pub" target="main">__call</a>(<a href="../datatype-string.htm" class="link">string</a> $method, <a href="../datatype-mixed.htm" class="link">mixed</a> $arguments)<ul class="description"><li>Public <a href="../datatype-mixed.htm" class="link">mixed</a> <span class="smallTitle">__call</span>(<a href="../datatype-string.htm" class="link">string</a> $method, <a href="../datatype-mixed.htm" class="link">mixed</a> $arguments)</li><li>Use overloading to call additional methods of the ReflectionClass instance given to the constructor</li><li class="smaller">@param string $method Method to be called</li><li class="smaller">@param array&lt;integer, mixed&gt; $arguments Arguments that were passed</li></ul></li><li class="Collapsed" id="f525cccab28e66"><a href="javascript:void(0);" class="method-pub" target="main">getMethod</a>(<a href="../datatype-string.htm" class="link">string</a> $name)<ul class="description"><li>Public <a href="../Reflection/class-ezcReflectionMethod.htm" class="link">Reflection\ezcReflectionMethod</a> <span class="smallTitle">getMethod</span>(<a href="../datatype-string.htm" class="link">string</a> $name)</li><li>Returns an ezcReflectionMethod object of the method specified by $name.</li><li class="smaller">@param string $name Name of the method</li></ul></li><li class="Collapsed" id="f525cccab29208"><a href="javascript:void(0);" class="method-pub" target="main">getConstructor</a>()<ul class="description"><li>Public <a href="../Reflection/class-ezcReflectionMethod.htm" class="link">Reflection\ezcReflectionMethod</a> <span class="smallTitle">getConstructor</span>()</li><li>Returns an ezcReflectionMethod object of the constructor method.</li></ul></li><li class="Collapsed" id="f525cccab295ae"><a href="javascript:void(0);" class="method-pub" target="main">getMethods</a>(<a href="../datatype-int.htm" class="link">int</a> $filter<span class="defVal"> = -1</span>)<ul class="description"><li>Public <span class="link">ezcReflectionMethod[]</span> <span class="smallTitle">getMethods</span>(<a href="../datatype-int.htm" class="link">int</a> $filter<span class="defVal"> = -1</span>)</li><li>Returns the methods as an array of ezcReflectionMethod objects.</li><li class="smaller">@param integer $filter</li></ul></li><li class="Collapsed" id="f525cccab29a07"><a href="javascript:void(0);" class="method-pub" target="main">getInterfaces</a>()<ul class="description"><li>Public <span class="link">ezcReflectionClass[]</span> <span class="smallTitle">getInterfaces</span>()</li><li>Returns an array of all interfaces implemented by the class.</li></ul></li><li class="Collapsed" id="f525cccab29d6b"><a href="javascript:void(0);" class="method-pub" target="main">getParentClass</a>()<ul class="description"><li>Public <span class="link">ezcReflectionClassType|boolean</span> <span class="smallTitle">getParentClass</span>()</li><li>Returns the class' parent class, or, if none exists, FALSE</li></ul></li><li class="Collapsed" id="f525cccab2a0b9"><a href="javascript:void(0);" class="method-pub" target="main">getProperty</a>(<a href="../datatype-string.htm" class="link">string</a> $name)<ul class="description"><li>Public <a href="../Reflection/class-ezcReflectionProperty.htm" class="link">Reflection\ezcReflectionProperty</a> <span class="smallTitle">getProperty</span>(<a href="../datatype-string.htm" class="link">string</a> $name)</li><li>Returns the class' property specified by its name</li><li class="smaller">@param string $name</li><li class="smaller">@throws RelectionException if property doesn't exists</li></ul></li><li class="Collapsed" id="f525cccab2a5ab"><a href="javascript:void(0);" class="method-pub" target="main">getProperties</a>(<a href="../datatype-int.htm" class="link">int</a> $filter<span class="defVal"> = -1</span>)<ul class="description"><li>Public <span class="link">ezcReflectionProperty[]</span> <span class="smallTitle">getProperties</span>(<a href="../datatype-int.htm" class="link">int</a> $filter<span class="defVal"> = -1</span>)</li><li>Returns an array of this class' properties</li><li class="smaller">@param integer $filter</li><li class="smaller">@return ezcReflectionProperty[] Properties of the class</li></ul></li><li class="Collapsed" id="f525cccab2a9f9"><a href="javascript:void(0);" class="method-pub" target="main">getShortDescription</a>()<ul class="description"><li>Public <a href="../datatype-string.htm" class="link">string</a> <span class="smallTitle">getShortDescription</span>()</li><li>Returns the short description of the class from the source code documentation</li><li class="smaller">@return string short description of the class</li></ul></li><li class="Collapsed" id="f525cccab2ac33"><a href="javascript:void(0);" class="method-pub" target="main">getLongDescription</a>()<ul class="description"><li>Public <a href="../datatype-string.htm" class="link">string</a> <span class="smallTitle">getLongDescription</span>()</li><li>Returns the long description of the class from the source code documentation</li><li class="smaller">@return string Long description of the class</li></ul></li><li class="Collapsed" id="f525cccab2ae75"><a href="javascript:void(0);" class="method-pub" target="main">isTagged</a>(<a href="../datatype-string.htm" class="link">string</a> $annotation)<ul class="description"><li>Public <a href="../datatype-boolean.htm" class="link">boolean</a> <span class="smallTitle">isTagged</span>(<a href="../datatype-string.htm" class="link">string</a> $annotation)</li><li>Checks whether the class is annotated with the annotation $annotation</li><li class="smaller">@param string $annotation Name of the annotation</li></ul></li><li class="Collapsed" id="f525cccab2b178"><a href="javascript:void(0);" class="method-pub" target="main">getTags</a>(<a href="../datatype-string.htm" class="link">string</a> $name<span class="defVal"> = &#039;&#039;</span>)<ul class="description"><li>Public <span class="link">ezcReflectionDocTag[]</span> <span class="smallTitle">getTags</span>(<a href="../datatype-string.htm" class="link">string</a> $name<span class="defVal"> = &#039;&#039;</span>)</li><li>Returns an array of annotations (optinally only annotations of a given name)</li><li class="smaller">@param string $name Name of the annotations</li><li class="smaller">@return ezcReflectionDocTag[] Annotations</li></ul></li><li class="Collapsed" id="f525cccab2b51c"><a href="javascript:void(0);" class="method-pub" target="main">getExtension</a>()<ul class="description"><li>Public <a href="../Reflection/class-ezcReflectionExtension.htm" class="link">Reflection\ezcReflectionExtension</a> <span class="smallTitle">getExtension</span>()</li><li>Returns NULL or the extension the class belongs to</li></ul></li><li class="Collapsed" id="f525cccab2b852"><a href="javascript:void(0);" class="method-pub" target="main">getExtensionName</a>()<ul class="description"><li>Public <span class="link">string|boolean</span> <span class="smallTitle">getExtensionName</span>()</li><li>Returns FALSE or the name of the extension the class belongs to <br />
This is purely a wrapper method which either calls the corresponding method of the parent class or forwards the call to the ReflectionClass instance passed to the constructor.</li><li class="smaller">@return string|boolean Extension name or FALSE</li></ul></li><li class="Collapsed" id="f525cccab2bb47"><a href="javascript:void(0);" class="method-pub" target="main">getName</a>()<ul class="description"><li>Public <a href="../datatype-string.htm" class="link">string</a> <span class="smallTitle">getName</span>()</li><li>Returns the name of the class.<br />
<br />
This is purely a wrapper method which either calls the corresponding method of the parent class or forwards the call to the ReflectionClass instance passed to the constructor.</li><li class="smaller">@return string Class name</li></ul></li><li class="Collapsed" id="f525cccab2be3c"><a href="javascript:void(0);" class="method-pub" target="main">getDocComment</a>()<ul class="description"><li>Public <a href="../datatype-string.htm" class="link">string</a> <span class="smallTitle">getDocComment</span>()</li><li>Returns the doc comment for the class.<br />
<br />
This is purely a wrapper method which either calls the corresponding method of the parent class or forwards the call to the ReflectionClass instance passed to the constructor.</li><li class="smaller">@return string Doc comment</li></ul></li><li class="Collapsed" id="f525cccab2c1bd"><a href="javascript:void(0);" class="method-pub" target="main">export</a>(<span class="link">ReflectionClass|string</span> $class, <a href="../datatype-bool.htm" class="link">bool</a> $return<span class="defVal"> = false</span>)<ul class="description"><li>Public static <a href="../datatype-mixed.htm" class="link">mixed</a> <span class="smallTitle">export</span>(<span class="link">ReflectionClass|string</span> $class, <a href="../datatype-bool.htm" class="link">bool</a> $return<span class="defVal"> = false</span>)</li><li>Exports a reflection object.<br />
<br />
Returns the output if TRUE is specified for return, printing it otherwise.<br />
This is purely a wrapper method which calls the corresponding method of the parent class.</li><li class="smaller">@param ReflectionClass|string $class</li><li class="smaller">@param boolean $return</li></ul></li></ul>
	</div>
	<div id="footer">Documentation generated on Oct 15, 2013, 0:03:45 -0500 by <a href="http://pear.php.net/package/PHP_UML/" target="_new">PHP_UML</a></div>
</body>
</html>