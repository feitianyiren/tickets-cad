<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
	<meta http-equiv="content-type" content="text/html; charset=iso-8859-1"/>
	<title>class ezcReflectionApi</title>
	<link type="text/css" rel="stylesheet" href="../$resources/style.css"/>
	<script type="text/javascript" language="javascript" src="../$resources/treeview.js"></script>
</head>
<body onload="toggler.setupTreeView('MainList');toggler.backToMemorizedState('MainList', 'btnToggle')">
	<ul class="navig">
	<li><a href="javascript:toggler.toggleAll('MainList', 'btnToggle')" class="expandAllBtn" id="btnToggle">Expand all</a></li><li><a href="../help.htm" class="helpBtn">Help</a></li><li><a href="../index-all.htm" class="indexAllBtn">Index</a></li><li><a href="class-ezcReflectionProperty.htm" class="left">Prev class</a></li><li><a href="package-summary.htm" class="top">Package</a></li><li><a href="class-ezcReflectionDocTagParam.htm" class="right">Next class</a></li>
	</ul>
	<h1 class="class">ezcReflectionApi</h1>
	<div id="MainList">
	<div class="description"><p>Class <span class="title">Reflection\ezcReflectionApi</span></p><ul class="description"><li>Holds type factory for generating type objects by given name</li><li class="smaller">@package Reflection</li><li class="smaller">@version //autogen//</li><li class="smaller">@author Stefan Marr &lt;mail@stefan-marr.de&gt;</li><li class="smaller">@author Falko Menge &lt;mail@falko-menge.de&gt;</li><li>File: DEV/tools/phpcallgraph-0.8.0/lib/ezcomponents/Reflection/src/reflection.php</li></ul></div><h2>Properties</h2><ul class="summary"><li class="Collapsed" id="reflectionTypeFactory"><a href="javascript:void(0);" class="property-pro" target="main">$reflectionTypeFactory</a><ul class="description"><li>Protected static <a href="../Reflection/interface-ezcReflectionTypeFactory.htm" class="link">Reflection\ezcReflectionTypeFactory</a> <span class="smallTitle">$reflectionTypeFactory</span><span class="defVal"> = null</span></li></ul></li><li class="Collapsed" id="docParser"><a href="javascript:void(0);" class="property-pro" target="main">$docParser</a><ul class="description"><li>Protected static <a href="../Reflection/interface-ezcReflectionDocParser.htm" class="link">Reflection\ezcReflectionDocParser</a> <span class="smallTitle">$docParser</span><span class="defVal"> = null</span></li></ul></li></ul><h2>Functions</h2><ul class="summary"><li class="Collapsed" id="f525cccab6b6e8"><a href="javascript:void(0);" class="method-pri" target="main">__construct</a>()<ul class="description"><li>Private <a href="../datatype-void.htm" class="link">void</a> <span class="smallTitle">__construct</span>()</li><li>Don't allow objects, it is just a static factory</li></ul></li><li class="Collapsed" id="f525cccab6b895"><a href="javascript:void(0);" class="method-pub" target="main">getDocParserInstance</a>()<ul class="description"><li>Public static <a href="../Reflection/interface-ezcReflectionDocParser.htm" class="link">Reflection\ezcReflectionDocParser</a> <span class="smallTitle">getDocParserInstance</span>()</li><li>Returns a copy of the current documentation parser used by all ezcReflection classes</li></ul></li><li class="Collapsed" id="f525cccab6bb6c"><a href="javascript:void(0);" class="method-pub" target="main">setDocParser</a>(<a href="../Reflection/interface-ezcReflectionDocParser.htm" class="link">Reflection\ezcReflectionDocParser</a> $docParser)<ul class="description"><li>Public static <a href="../datatype-void.htm" class="link">void</a> <span class="smallTitle">setDocParser</span>(<a href="../Reflection/interface-ezcReflectionDocParser.htm" class="link">Reflection\ezcReflectionDocParser</a> $docParser)</li><li>Sets the documentation parser used by all ezcReflection classes</li><li class="smaller">@param setDocParser $docParser Parser for documentation blocks</li></ul></li><li class="Collapsed" id="f525cccab6be77"><a href="javascript:void(0);" class="method-pub" target="main">getReflectionTypeFactory</a>()<ul class="description"><li>Public static <a href="../Reflection/interface-ezcReflectionTypeFactory.htm" class="link">Reflection\ezcReflectionTypeFactory</a> <span class="smallTitle">getReflectionTypeFactory</span>()</li><li>Returns a copy of the current factory used to create type objects</li></ul></li><li class="Collapsed" id="f525cccab6c11d"><a href="javascript:void(0);" class="method-pub" target="main">setReflectionTypeFactory</a>(<a href="../Reflection/interface-ezcReflectionTypeFactory.htm" class="link">Reflection\ezcReflectionTypeFactory</a> $factory)<ul class="description"><li>Public static <a href="../datatype-void.htm" class="link">void</a> <span class="smallTitle">setReflectionTypeFactory</span>(<a href="../Reflection/interface-ezcReflectionTypeFactory.htm" class="link">Reflection\ezcReflectionTypeFactory</a> $factory)</li><li>Sets the factory used to create type objects</li><li class="smaller">@param ezcReflectionTypeFactory $factory Factory for type objects</li></ul></li><li class="Collapsed" id="f525cccab6c41e"><a href="javascript:void(0);" class="method-pub" target="main">getTypeByName</a>(<a href="../datatype-string.htm" class="link">string</a> $typeName)<ul class="description"><li>Public static <a href="../Reflection/interface-ezcReflectionType.htm" class="link">Reflection\ezcReflectionType</a> <span class="smallTitle">getTypeByName</span>(<a href="../datatype-string.htm" class="link">string</a> $typeName)</li><li>Returns a ezcReflectionType object for the given type name</li><li class="smaller">@param string $typeName</li></ul></li><li class="Collapsed" id="f525cccab6c72a"><a href="javascript:void(0);" class="method-pub" target="main">getClasses</a>()<ul class="description"><li>Public static <span class="link">ezcReflectionClass[]</span> <span class="smallTitle">getClasses</span>()</li><li>Returns an array with the ezcReflectionClass objects for all declared classes</li><li class="smaller">@return ezcReflectionClass[] all declared classes</li></ul></li><li class="Collapsed" id="f525cccab6ca09"><a href="javascript:void(0);" class="method-pub" target="main">getInterfaces</a>()<ul class="description"><li>Public static <span class="link">ezcReflectionClass[]</span> <span class="smallTitle">getInterfaces</span>()</li><li>Returns an array with the ezcReflectionClass objects for all declared interfaces</li><li class="smaller">@return ezcReflectionClass[] all declared interfaces</li></ul></li><li class="Collapsed" id="f525cccab6cd08"><a href="javascript:void(0);" class="method-pub" target="main">getUserDefinedFunctions</a>()<ul class="description"><li>Public static <span class="link">ezcReflectionFunction[]</span> <span class="smallTitle">getUserDefinedFunctions</span>()</li><li>Returns an array with the ezcReflectionFunction objects for all user-defined functions</li><li class="smaller">@return ezcReflectionFunction[] all user-defined functions</li></ul></li><li class="Collapsed" id="f525cccab6d004"><a href="javascript:void(0);" class="method-pub" target="main">getInternalFunctions</a>()<ul class="description"><li>Public static <span class="link">ezcReflectionFunction[]</span> <span class="smallTitle">getInternalFunctions</span>()</li><li>Returns an array with the ezcReflectionFunction objects for all available internal functions</li><li class="smaller">@return ezcReflectionFunction[] all internal functions</li></ul></li><li class="Collapsed" id="f525cccab6d394"><a href="javascript:void(0);" class="method-pub" target="main">getFunctions</a>()<ul class="description"><li>Public static <span class="link">ezcReflectionFunction[]</span> <span class="smallTitle">getFunctions</span>()</li><li>Returns an array with the ezcReflectionFunction objects for all internal and user-defined functions</li><li class="smaller">@return ezcReflectionFunction[] all internal and user-defined functions</li></ul></li></ul>
	</div>
	<div id="footer">Documentation generated on Oct 15, 2013, 0:03:45 -0500 by <a href="http://pear.php.net/package/PHP_UML/" target="_new">PHP_UML</a></div>
</body>
</html>