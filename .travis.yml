#TODO: 
# mysql database user
# database credentials, user, and permissions
# passwordless apt-get install
# SauceLabs Config
# Split with Buildhive? (Requires adding delay to avoid infinite commit-build-commit loop)
# Apache, Nginx, Cherokee, Hiawatha, etc Servers
# Possible to test caching, minification, etc?
# Fix exception error and uncomment PHPCallGraph
# PHP Documentation Generator
# JS Documentation Generator (YUI Docs)
# Test and Uncomment ERD Generation / Database Tools
# Add and Test Security Tools (OWASP-ZAP with Selenium)
# Static Code Analyzers (Scrutinizer, etc)
# Scrutinizer Free CI for Open Source?
# Include Codeception to consolidate testing?
# PHPUnit.xml needed
# Unit Testing for Javascript?
# Specify custom rules/config xml files for PHPQATools and PHPDoc
# QA Tools for Javascript?

# see http://about.travis-ci.org/docs/user/languages/php/ for more hints
language: php

# list any PHP version you want to test against
php:
  # using major version aliases

  ## aliased to 5.2.17
  # - 5.2
  # aliased to a recent 5.3.x version
  - 5.3
  # aliased to a recent 5.4.x version
  # - 5.4
  ## aliased to a recent 5.5.x version
  # - 5.5

# optionally specify a list of environments, for example to test different RDBMS
env:
  - DB=mysql
#  - DB=pgsql

#  global:
#    - SAUCE_USERNAME=myusername
#    - secure: my_accesskey_encrypted_using_the_travis_gem

before_script:
# execute any number of scripts before the test run, custom env's are available as variables
#-----------------------------------------------------
## Install / Update
#  - sudo apt-get update -qq

## For SQL ERD Generation
#  - sudo apt-get install sqlfairy

## For PHP_UML 
#  - sudo apt-get install php5-xsl
#  - pear install PHP_UML  

## APACHE
#  - sudo apt-get update > /dev/null
#  - sudo apt-get install -y --force-yes apache2 libapache2-mod-php5 php5-curl php5-mysql php5-intl

## For YUI Docs
#  - sudo apt-get install nodejs -qq
#  - npm -g install yuidocjs

## Only if SQLFairy doesn't work (Backup Plan: SchemaSpy)
#  - sudo apt-get install graphviz -qq
#--------------------------------------------------
##Sauce Connect
#  - curl https://gist.github.com/santiycr/5139565/raw/sauce_connect_setup.sh | bash

#---------------------------------------------------
## DB Setup
#  - if [[ "$DB" == "pgsql" ]]; then psql -c "DROP DATABASE IF EXISTS hello_world_test;" -U postgres; fi
#  - if [[ "$DB" == "pgsql" ]]; then psql -c "create database hello_world_test;" -U postgres; fi
  - if [[ "$DB" == "mysql" ]]; then mysql -e "create database IF NOT EXISTS tickets;" -uroot; fi
  # HEY IDIOT: username is travis, password is blank
#---------------------------------------------------
  - pear channel-discover pear.phpdoc.org
  - pear install phpdoc/phpDocumentor
  - phpenv rehash
#pear.phpunit.de/PHPUnit
#pear.phpunit.de/PHPUnit_Skeleton_Generator
#---------------------------------------------------
##DEV TOOLS
#PHP_UML (Works local)(<1min)(Requires PHP Extension "XSL")
#  - phpuml ./ -n TicketsCAD -o ./DEV/build/PHP_UML -f htmlnew
#  - phpuml ./ -n TicketsCAD -o ./DEV/build/PHP_UML -f xmi
#PHPCallGraph (Failed Local)(0) (Use Higher-Order-PHP Call Graph instead. Also convert dot to graphML.)
#  - php ./DEV/tools/phpcallgraph-0.8.0/bin/phpcallgraph -f png -o ./DEV/build/PHP-CallGraph/callgraph.png -r -p ./
#  - php ./DEV/tools/phpcallgraph-0.8.0/bin/phpcallgraph -r -f deadcode ./ > ./DEV/build/PHP-CallGraph/phpcallgraph-deadcode.txt

#----------------------------------------------
#SELENIUM / SAUCELABS INTEGRATION
#PLACEHOLDER: PROBABLY(?) NOT CORRECT FOR PHP. From Saucelabs tutorial "building a CI system using selenium builder github travis and sauce labs
#  - npm install -g se-interpreter

# omitting "script:" will default to phpunit
# use the $DB env variable to determine the phpunit.xml to use
script: 
##TESTING
##    UI TESTING
#Selenium and Appium(SauceLabs) (Sauce Connect?)
##    SECURITY TESTING
#W3AF
#Skipfish
#OWASP-ZAP
# /path/to/ZapDir/zap.jar -daemon (Starts zap with no UI)
#RIPS
#Scrutinizer
#Vega
##    BEHAVIOR TESTING
#Behat
##    UNIT TESTING
#PHPUnit
#  - phpunit --configuration phpunit_$DB.xml --coverage-text
after_script:
#-----------------------------------------
## Database Tools
#SQLFairy ERD Generation 
#(http://nsaunders.wordpress.com/2009/01/11/easy-visualisation-of-database-schemas-using-sqlfairy/)
#  - mysqldump -u username -p -d tickets > ./DEV/build/DB/tickets.sql
#  - sqlt-graph -f MySQL -o ./DEV/build/DB/tickets.png -t png ./DEV/build/DB/tickets.sql

#Backup Plan: SchemaSpy (Java Command Line for Generating Database ERDs)
##  requires Java be installed
#  - java -jar ./DEV/tools/schemaSpy.jar -t mysql -db tickets -u user [-p password] -o ./DEV/build/SchemaSpy/

# - or -
#SchemaCrawler
#------------------------------------------
## Documentation Tools  
#PHPCodeBrowser (Works local)(<1min)
#  - phpcb -s ./ -o ./DEV/build/PHPQATools/PHP-CB/ -i ./DEV/
##Documentation Generator
#PHPDocumentor ()() (Mod to avoid documenting the documentation?)
#  - phpdoc -d . -t ./DEV/build/docs --template checkstyle -i ./DEV/*
# - or - 
#Doxygen (Doxyfile stored in ./DEV/build/docs/Doxygen/)
# Need to install Doxygen
# Doxygen Usage:

#PHPDox (Create XML Config File, store in ./DEV/tools/Doc-Config)
#  - phpdox

# - and a -
#JS Doc Generator ...
#YUI Docs? (Requires node.js)
#  - yuidoc -e .js,.php -x ./DEV/*,.git ./
#------------------------------------------

notifications:
# configure notifications (email, IRC, campfire etc)
#  - irc: "irc.freenode.org#travis"
  - email: false
